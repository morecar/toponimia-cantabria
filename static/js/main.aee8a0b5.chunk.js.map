{"version":3,"sources":["staticData/localization.js","components/SearchBar.js","components/SettingsPopover.js","components/TagsContainer.js","components/MapMarker.js","staticData/constants.js","components/ResultsMap.js","components/ResultsPage.js","components/CaptureMap.js","App.js","model/configuration.js","staticData/googleCredentials.js","model/gSpreadsheet.js","model/topoRepository.js","index.js"],"names":["BRAND_NAME","ast","esp","BRAND_ALT","SEARCH_PLACEHOLDER","SEARCH_REGEX_PLACEHOLDER","SearchBar","props","searchBar","React","createRef","state","tags","rawQuery","searchString","searchBoxContents","event","preventDefault","query","this","current","value","trim","onSearch","config","searchAutocompleteUnderdoth","regex","RegExp","replace","match","offset","string","startsWith","Form","inline","onSubmit","handleSearch","bind","FormControl","type","onChange","handleChange","placeholder","language","ref","Component","SettingsPopover","target","id","checked","resultsTitle","resultsTags","resultsTypes","Array","from","Set","add","filter","e","searchUseRegex","searchAutocompleteTags","searchDisplayTagPalette","onSettingsUpdated","popOverProps","repository","Popover","Content","Group","handleToggleChanged","Label","Check","defaultChecked","label","name","disabled","includes","TagsContainer","Tooltip","permanent","direction","className","Object","keys","map","key","Badge","variant","getLabel","tag","endsWith","split","pop","MapMarker","Marker","position","Popup","title","displayTags","CENTER_CANTABRIA","getCentroid","arr","reduce","x","y","length","ResultsMap","blackOptions","color","MapContainer","center","zoom","scrollWheelZoom","zoomControl","dragging","TileLayer","attribution","url","points","coordinates","polys","Polygon","pathOptions","positions","lines","Polyline","ResultsPage","search","displayLines","displayPolys","displayPoints","retultsToDisplay","useRegex","setState","point","Container","Navbar","fixed","bg","expand","Brand","src","alt","Toggle","aria-controls","Collapse","Nav","updateResults","getAllTags","NavItem","OverlayTrigger","trigger","placement","overlay","handleSettingsUpdated","style","LocationMarker","useMapEvents","click","latlng","lat","lng","onClick","CaptureMap","searchBoxRef","newPoints","newPointsLength","dashArray","registerLocation","App","path","children","CONFIG_LOCALSTORAGE_KEY","DEFAULT_CONFIG","lang","results_title","results_tags","results_types","search_use_regex","search_autocomplete_underdoth","search_autocomplete_tags","search_display_tag_palette","ConfigService","entries","forEach","defaultValue","localStorage","setItem","JSON","stringify","_config","newConfig","writeToLocalStorage","newLanguage","newResultsTitle","newResultsTags","newResultsTypes","newSearchAutocompleteUnderdoth","newSearchAutocompleteTags","newSearchDisplayTagPalette","newSearchUseRegex","parse","getItem","GOOGLE_INFO_SHEET_CELL","GSpreadsheet","doc","connect","loadInfo","console","log","sheetsByTitle","info_sheet","loadCells","getCellByA1","hash","sheet","GoogleSpreadsheet","useApiKey","spreadsheet","a","shouldReload","reloadLocalDatabase","buildRepositoryFromLocalStorage","TopoRepository","newHash","googleSheet","getRows","then","rows","remotedb","row","pair","parseFloat","currentHash","reload","database","_","orderBy","pattern","matchMissingAccents","searchPattern","accountForMissingAccents","entry","test","load","Configuration","readFromLocalStorage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aee8a0b5.chunk.js","sourcesContent":["export const ROUTE_HOME = '/'\nexport const ROUTE_CAPTURE = '/nuivu'\n\nexport const NEW_MS = {ast: 'Nuivu', esp: 'Nuevo'}\nexport const BRAND_NAME = {ast: \"L'Unicurniu\", esp: \"L'Unicurniu\"}\nexport const BRAND_ALT = {ast: 'Imagin de cabeza di unicurniu', esp: 'Imagen de cabeza de unicornio'}\n\nexport const SEARCH_PLACEHOLDER = {ast: 'Iscribi la tu búsqueda…', esp: 'Escribe tu búsqueda…'}\nexport const SEARCH_REGEX_PLACEHOLDER = {ast: 'Búsqueda con regexp…', esp: 'Búsqueda con regexp…'}","import React, { Component} from 'react';\n\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\n\nimport {SEARCH_PLACEHOLDER, SEARCH_REGEX_PLACEHOLDER} from '../staticData/localization'\n\nexport default class SearchBar extends Component {\n    constructor(props) {\n      super(props);\n      this.searchBar = React.createRef()\n  \n      this.state = {\n        tags: [],\n        rawQuery: \"\",\n        searchString: this.props.searchBoxContents\n      }\n    }\n    \n    handleSearch(event) {\n        event.preventDefault();\n        var query = this.searchBar.current.value.trim()\n        this.props.onSearch(query)\n    }\n\n    handleChange(event) {\n        if(this.props.config.searchAutocompleteUnderdoth) {\n            let regex = RegExp(/h\\.\\S/, 'i')\n            this.searchBar.current.value = this.searchBar.current.value.replace(regex, (match, offset, string) => {return match.startsWith('h') ? `ḥ${string[offset+2]}` : `Ḥ${[offset+2]}` })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Form inline onSubmit={this.handleSearch.bind(this)}>\n                    <FormControl type=\"text\" onChange={this.handleChange.bind(this)} placeholder={this.props.regex?SEARCH_REGEX_PLACEHOLDER[this.props.config.language]:SEARCH_PLACEHOLDER[this.props.config.language]} ref={this.searchBar}/>\n                </Form>\n            </div>\n        )\n    }\n}","import React, { Component} from 'react';\n\nimport Form from 'react-bootstrap/Form'\nimport Popover from 'react-bootstrap/Popover'\n\nexport default class SettingsPopover extends Component {\n\n\n    handleToggleChanged(event) {\n        if(event.target.id === 'show-title-always' && event.target.checked) this.props.config.resultsTitle = 'always'\n        if(event.target.id === 'show-title-search' && event.target.checked) this.props.config.resultsTitle = 'search'\n        if(event.target.id === 'show-title-never' && event.target.checked) this.props.config.resultsTitle = 'never'\n\n        if(event.target.id === 'show-tags-always' && event.target.checked) this.props.config.resultsTags = 'always'\n        if(event.target.id === 'show-tags-search' && event.target.checked) this.props.config.resultsTags = 'search'\n        if(event.target.id === 'show-tags-never' && event.target.checked) this.props.config.resultsTags = 'never'\n\n        if(event.target.id === 'toggle-points')\n            this.props.config.resultsTypes =  event.target.checked\n                                                    ? Array.from(new Set(this.props.config.resultsTypes).add('point'))\n                                                    : this.props.config.resultsTypes.filter(e => e!=='point')\n\n        if(event.target.id === 'toggle-lines')\n            this.props.config.resultsTypes =  event.target.checked \n                                                    ? Array.from(new Set(this.props.config.resultsTypes).add('line'))\n                                                    : this.props.config.resultsTypes.filter(e => e!=='line')\n\n        if(event.target.id === 'toggle-polygons')\n            this.props.config.resultsTypes =  event.target.checked \n                                                    ? Array.from(new Set(this.props.config.resultsTypes).add('poly'))\n                                                    : this.props.config.resultsTypes.filter(e => e!=='poly')\n\n        if(event.target.id === 'toggle-regex') this.props.config.searchUseRegex = event.target.checked\n        if(event.target.id === 'toggle-underdoth') this.props.config.searchAutocompleteUnderdoth = event.target.checked\n        if(event.target.id === 'toggle-tag-auto') this.props.config.searchAutocompleteTags = event.target.checked   \n        if(event.target.id === 'toggle-tag-palette') this.props.config.searchDisplayTagPalette = event.target.checked  \n        \n        this.props.onSettingsUpdated()\n    }\n\n    render() {\n        const { repository, searchBoxContents, onSettingsUpdated, ...popOverProps} = this.props\n        return (         \n              <Popover {...popOverProps}>\n                <Popover.Content>\n                  <Form>\n                    <Form.Group onChange={this.handleToggleChanged.bind(this)}>\n                        <Form.Label><b>Veyer tupúnimu</b></Form.Label>\n                        <div>\n                            <Form.Check defaultChecked={this.props.config.resultsTitle === 'always'} label='Siempri' type='radio' id='show-title-always' name='showTitle' disabled/>\n                            <Form.Check defaultChecked={this.props.config.resultsTitle === 'search'} label='In búsquedas' type='radio' id='show-title-search' name='showTitle' disabled/>\n                            <Form.Check defaultChecked={this.props.config.resultsTitle === 'never'} label='In cliquiandu' type='radio' id='show-title-never' name='showTitle' disabled/>\n                        </div>\n                    </Form.Group>\n                    <Form.Group onChange={this.handleToggleChanged.bind(this)}>\n                        <Form.Label><b>Veyer etiquetas</b></Form.Label>\n                        <div>   \n                            <Form.Check defaultChecked={this.props.config.resultsTags === 'always'} label='Siempri' type='radio' id='show-tags-always' name='showTags'/>\n                            <Form.Check defaultChecked={this.props.config.resultsTags === 'search'} label='In búsquedas' type='radio' id='show-tags-search' name='showTags'/>\n                            <Form.Check defaultChecked={this.props.config.resultsTags === 'never'} label='Desactivás' type='radio' id='show-tags-never' name='showTags'/>\n                            \n                        </div>\n                    </Form.Group>\n                    <Form.Group onChange={this.handleToggleChanged.bind(this)}>\n                        <Form.Label><b>Clas de resultáus</b></Form.Label>\n                        <div>                          \n                            <Form.Check inline defaultChecked={this.props.config.resultsTypes.includes('point')} label='Puntualis' type={'checkbox'} id={'toggle-points'} />\n                            <Form.Check inline defaultChecked={this.props.config.resultsTypes.includes('line')} label='Linialis' type={'checkbox'} id={'toggle-lines'} disabled/>\n                            <Form.Check inline defaultChecked={this.props.config.resultsTypes.includes('poly')} label='Zonalis' type={'checkbox'}  id={'toggle-polygons'} disabled/>\n                        </div>\n                    </Form.Group>\n                    <Form.Group onChange={this.handleToggleChanged.bind(this)}>\n                        <Form.Label><b>Otrus</b></Form.Label>\n                        <Form.Check defaultChecked={this.props.config.searchUseRegex} type='switch' id='toggle-regex' label='Búsqueda con regex' />\n                        <Form.Check defaultChecked={this.props.config.searchAutocompleteUnderdoth} type='switch' id='toggle-underdoth' label='Detectar hachi supuntiá (h.→ḥ)'/>\n                        <Form.Check defaultChecked={this.props.config.searchAutocompleteTags} type='switch' id='toggle-tag-auto' label='Autucompletar etiquetas' disabled/>\n                        <Form.Check defaultChecked={this.props.config.searchDisplayTagPalette} type='switch' id='toggle-tag-palette' label='Veyer paleta etiquetas' disabled/>\n                    </Form.Group>\n                  </Form>\n                </Popover.Content>\n              </Popover>\n        )\n    }\n}\n\n","import {Tooltip} from 'react-leaflet'\nimport Badge from 'react-bootstrap/Badge'\n\nexport default function TagsContainer(props) {\n    return (\n        <Tooltip permanent={true} direction={'bottom'} offset={[-15, 20]} className={\"tagsContainer\"}>\n            {\n                Object.keys(props.tags).map(function(key) {\n                    return  <span key={key}><Badge variant={\"primary\"}>{getLabel(props.tags[key])}</Badge>{' '}</span>\n                })\n            }\n        </Tooltip>\n    );\n  }\n\nfunction getLabel(tag) {\n    if(tag.startsWith(\"etymology\")) {\n        if(tag.endsWith(\"celtic\")) return \"Et: Celta\"\n        if(tag.endsWith(\"romance\")) return \"Et: Romanci\"\n    }\n    if(tag.startsWith(\"phonology\")) {\n        if(tag.endsWith(\"metaphony_u\")) return \"Metafunía U\"\n        if(tag.endsWith(\"aspirate_f\")) return \"F aspiráu\"\n        if(tag.endsWith(\"b_g\")) return \"Cambiu B > G\"\n        if(tag.endsWith(\"lost_f\")) return \"F mudu\"\n    }\n\n    return tag.split(':').pop()\n} ","import { Marker, Popup} from 'react-leaflet'\n\nimport TagsContainer from './TagsContainer'\n\nexport default function MapMarker(props) {\n    return (\n        <Marker position={props.position}>\n            <Popup>{props.title}</Popup>\n            {props.displayTags?<TagsContainer tags={props.tags}/>:null}\n        </Marker>\n    );\n  }","export const CENTER_CANTABRIA = [43.19775063914452, -4.029390585676174]","import { MapContainer, TileLayer, Polyline, Polygon} from 'react-leaflet'\n\nimport MapMarker from './MapMarker';\n\nimport {CENTER_CANTABRIA} from '../staticData/constants'\n\nfunction getCentroid(arr) { \n    return arr.reduce(function (x,y) {\n        return [x[0] + y[0]/arr.length, x[1] + y[1]/arr.length] \n    }, [0,0]) \n}\n\nexport default function ResultsMap(props) {\n    const blackOptions = { color: 'black' }\n    return (\n        <MapContainer center={CENTER_CANTABRIA} zoom={10} scrollWheelZoom={true} zoomControl={false} dragging={true}>   \n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {\n            Object.keys(props.points).map(function(key) {\n              return <MapMarker displayTags={props.displayTags} key={key} position={props.points[key].coordinates[0]} {...props.points[key]}/>\n            })\n          }\n          {\n            Object.keys(props.polys).map(function(key) {\n              return <div key={key}>\n                      <Polygon pathOptions={blackOptions} positions={props.polys[key].coordinates} />\n                      <MapMarker displayTags={props.displayTags} key={key} position={getCentroid(props.polys[key].coordinates)} {...props.polys[key]}/>\n                    </div>\n            })\n          }\n          {\n            Object.keys(props.lines).map(function(key) {\n              return <div key={key}>\n                      <Polyline pathOptions={blackOptions} positions={props.lines[key].coordinates} />\n                      <MapMarker displayTags={props.displayTags} key={key} position={getCentroid(props.lines[key].coordinates)} {...props.lines[key]}/>\n                    </div>\n            })\n          }\n        </MapContainer>\n    );\n}","import React, { Component} from 'react';\n\nimport {Container, Navbar, Nav, NavItem, OverlayTrigger} from 'react-bootstrap';\nimport {Toggles} from 'react-bootstrap-icons';\n\nimport SearchBar from './SearchBar'\nimport SettingsPopover from './SettingsPopover'\n\nimport {BRAND_ALT, BRAND_NAME} from '../staticData/localization'\nimport ResultsMap from './ResultsMap';\n\nexport default class ResultsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: this.props.searchBoxContents ? true : false,\n      displayTags: (this.props.config.resultsTags === 'always') || (this.props.config.resultsTags === 'search' && this.props.searchBoxContents),\n      displayLines: (this.props.config.resultsTypes.includes('line')),\n      displayPolys: (this.props.config.resultsTypes.includes('poly')),\n      displayPoints: (this.props.config.resultsTypes.includes('point')),\n      retultsToDisplay: this.props.repository.search(this.props.searchBoxContents),\n      useRegex: this.props.config.searchUseRegex\n    }\n  }\n\n  updateResults(searchString) {\n    this.setState( {\n      search: searchString ? true : false,\n      displayTags: (this.props.config.resultsTags === 'always') || (this.props.config.resultsTags === 'search' && searchString ? true : false),\n      retultsToDisplay: this.props.repository.search(searchString, this.props.config.searchUseRegex)\n    })\n  }\n\n  handleSettingsUpdated() {\n    this.setState(\n      {\n        displayTags: (this.props.config.resultsTags === 'always') || (this.props.config.resultsTags === 'search' && this.state.search),\n        displayLines: (this.props.config.resultsTypes.includes('line')),\n        displayPolys: (this.props.config.resultsTypes.includes('poly')),\n        displayPoints: (this.props.config.resultsTypes.includes('point')),\n        useRegex: this.props.config.searchUseRegex\n      }\n    )\n  }\n\n  render() {\n    const points = this.state.displayPoints ? this.state.retultsToDisplay.filter(point => point.type === 'point') : []\n    const polys = this.state.displayPolys ? this.state.retultsToDisplay.filter(point => point.type === 'poly') : []\n    const lines = this.state.displayLines ? this.state.retultsToDisplay.filter(point => point.type === 'line') : []\n    return (\n      <Container>\n        <Navbar fixed=\"top\"  bg=\"dark\" expand=\"lg\" variant=\"dark\">\n          <Navbar.Brand>\n            <img src=\"./unicorn.png\" alt={BRAND_ALT[this.props.config.language]}/>\n          </Navbar.Brand> \n          <Navbar.Brand className={'main-brand'}>{BRAND_NAME[this.props.config.language]}</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />        \n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <SearchBar onSearch={this.updateResults.bind(this)} tags={this.props.repository.getAllTags()} regex={this.state.useRegex} {...this.props}/>\n              <NavItem id=\"settings\">\n              <OverlayTrigger trigger=\"click\" placement={'bottom'} overlay={<SettingsPopover  onSettingsUpdated={this.handleSettingsUpdated.bind(this)} {...this.props}/>}> \n                  <Toggles style={{'fontSize': 'xx-large'}}/>\n              </OverlayTrigger>\n              </NavItem>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <ResultsMap points={points} lines={lines} polys={polys} displayTags={this.state.displayTags} {...this.props}/>\n      </Container>\n    );\n  }\n}\n\n","import React, { Component} from 'react';\n\nimport Container from 'react-bootstrap/Container'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { MapContainer, TileLayer, Marker, useMapEvents, Polyline } from 'react-leaflet'\n\nimport {CENTER_CANTABRIA} from '../staticData/constants'\n\n\nfunction LocationMarker(props) {\n  useMapEvents({\n    click(event) {\n      const { lat, lng } = event.latlng;\n      props.onClick([lat, lng])\n    }\n  })\n}\n\nexport default class CaptureMap extends Component {\n  constructor(props) {\n    super(props);\n    this.searchBoxRef = React.createRef()\n\n    this.state = {\n      newPoints : []\n    }\n  }\n\n\n  registerLocation(position) {\n    this.setState({ newPoints: [...this.state.newPoints, position]})\n  }\n\n\n  render() {\n    const blackOptions = { color: 'black' }\n    const limeOptions = { color: 'black', dashArray: \"4\" }\n    const newPointsLength = this.state.newPoints.length-1\n    return (\n      <Container>\n        <MapContainer center={CENTER_CANTABRIA} zoom={10} scrollWheelZoom={true} zoomControl={false} dragging={true}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n\n{\n            Object.keys(this.state.newPoints).map(function(key) {\n              return <Marker position={this.state.newPoints[key]} key={key}>\n              </Marker>\n            }.bind(this))\n           }\n\n        <Polyline pathOptions={blackOptions} positions={this.state.newPoints} />\n\n          {\n            this.state.newPoints.length > 2 \n            ? <Polyline pathOptions={limeOptions} positions={[this.state.newPoints[0], this.state.newPoints[newPointsLength]]} />\n            : null\n          }\n          <LocationMarker onClick={this.registerLocation.bind(this)}/>\n        </MapContainer>\n        <Navbar fixed=\"bottom\"  bg=\"dark\" expand=\"lg\" variant=\"dark\">\n          <Navbar.Brand>\n            <img src=\"./unicorn.png\" alt=\"Icunu di unicurniu encabritáu\"/>\n          </Navbar.Brand>          \n        </Navbar>\n      </Container>\n    );\n  }\n}","import './App.css';\n\nimport React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport ResultsPage from './components/ResultsPage'\nimport CaptureMap from './components/CaptureMap'\n\nimport {ROUTE_HOME, ROUTE_CAPTURE} from './staticData/localization.js'\n\nexport default function App(props) {\n    return (\n        <Router>\n            <Switch>\n                <Route path={ROUTE_CAPTURE} children={<CaptureMap repository={props.repository} {...props} />} />\n                <Route path={ROUTE_HOME} children={<ResultsPage repository={props.repository} searchBoxContents={\"\"} {...props} />} />\n            </Switch>\n        </Router>\n    )\n}\n\n\n\n\n","\nconst CONFIG_LOCALSTORAGE_KEY = \"config\"\n\nconst DEFAULT_CONFIG = {\n    lang: 'ast',\n    results_title: 'never',\n    results_tags: 'search',\n    results_types: ['point'],\n    search_use_regex: true,\n    search_autocomplete_underdoth: true,\n    search_autocomplete_tags: false,\n    search_display_tag_palette: false\n  }\n\nexport default class ConfigService {\n    constructor(config) {\n        Object.entries(DEFAULT_CONFIG).forEach(([key, defaultValue]) => (config[key] = config[key]??defaultValue))\n\n        this.config = config\n    }\n\n    static readFromLocalStorage() {\n        return new ConfigService(JSON.parse(localStorage.getItem(CONFIG_LOCALSTORAGE_KEY) ?? \"{}\"))\n    }\n\n    writeToLocalStorage() {\n        localStorage.setItem(CONFIG_LOCALSTORAGE_KEY, JSON.stringify(this._config))\n    }\n\n    set config(newConfig) {\n        this._config = newConfig\n        this.writeToLocalStorage()\n    }\n\n    get language() {\n        return this._config.lang\n    }\n\n    set language(newLanguage) {\n        this._config.lang = newLanguage;\n        this.writeToLocalStorage()\n    }\n\n    get resultsTitle() {\n        return this._config.results_title\n    }\n\n    set resultsTitle(newResultsTitle) {\n        this._config.results_title = newResultsTitle;\n        this.writeToLocalStorage()\n    }\n\n    get resultsTags() {\n        return this._config.results_tags\n    }\n\n    set resultsTags(newResultsTags) {\n        this._config.results_tags = newResultsTags;\n        this.writeToLocalStorage()\n    }\n\n    get resultsTypes() {\n        return this._config.results_types\n    }\n\n    set resultsTypes(newResultsTypes) {\n        this._config.results_types = newResultsTypes;\n        this.writeToLocalStorage()\n    }\n\n    get searchAutocompleteUnderdoth() {\n        return this._config.search_autocomplete_underdoth\n    }\n\n    set searchAutocompleteUnderdoth(newSearchAutocompleteUnderdoth) {\n        this._config.search_autocomplete_underdoth = newSearchAutocompleteUnderdoth;\n        this.writeToLocalStorage()\n    }\n\n    get searchAutocompleteTags() {\n        return this._config.search_autocomplete_tags\n    }\n\n    set searchAutocompleteTags(newSearchAutocompleteTags) {\n        this._config.search_autocomplete_tags = newSearchAutocompleteTags;\n        this.writeToLocalStorage()\n    }\n\n    get searchDisplayTagPalette() {\n        return this._config.search_display_tag_palette\n    }\n\n    set searchDisplayTagPalette(newSearchDisplayTagPalette) {\n        this._config.search_display_tag_palette = newSearchDisplayTagPalette;\n        this.writeToLocalStorage()\n    }\n\n    get searchUseRegex() {\n        return this._config.search_use_regex\n    }\n\n    set searchUseRegex(newSearchUseRegex) {\n        this._config.search_use_regex = newSearchUseRegex;\n        this.writeToLocalStorage()\n    }\n}","export const GOOGLE_SHEETS_API_KEY = 'AIzaSyBl_GJjcKmg4Lk0dWPLzGX6bXpT0vXW5R0'\n\nexport const GOOGLE_DOC_ID = '1Rd8TQOp2hSBOxhSeAaLeb_faICF2_oAv2-jtn2vgXrY'\nexport const GOOGLE_DB_SHEET_TITLE = 'DB'\nexport const GOOGLE_INFO_SHEET_TITLE = 'INFO'\nexport const GOOGLE_INFO_SHEET_CELL = 'A1'\n\n","import { GoogleSpreadsheet } from 'google-spreadsheet';\nimport { GOOGLE_DOC_ID, GOOGLE_DB_SHEET_TITLE, GOOGLE_INFO_SHEET_TITLE, GOOGLE_INFO_SHEET_CELL, GOOGLE_SHEETS_API_KEY } from '../staticData/googleCredentials'\n\nexport default class GSpreadsheet {\n  static async load() {\n    const doc = this.connect()\n    await doc.loadInfo(); \n    console.log(`Spreadsheets: loaded document ${doc.title}`);\n\n    const info_sheet = await doc.sheetsByTitle[GOOGLE_INFO_SHEET_TITLE]\n    await info_sheet.loadCells(`${GOOGLE_INFO_SHEET_CELL}:${GOOGLE_INFO_SHEET_CELL}`)\n    \n    return  {\n              hash: info_sheet.getCellByA1(GOOGLE_INFO_SHEET_CELL).value,\n              sheet: await doc.sheetsByTitle[GOOGLE_DB_SHEET_TITLE]\n            }\n  }\n\n  static connect() {\n    const doc = new GoogleSpreadsheet(GOOGLE_DOC_ID);\n    doc.useApiKey(GOOGLE_SHEETS_API_KEY)\n    return doc\n  }\n}","import _ from 'lodash'\n\nexport async function buildRepositoryFromSheet(spreadsheet) {\n    if (shouldReload(spreadsheet.hash)) \n        await reloadLocalDatabase(spreadsheet.hash, spreadsheet.sheet)\n\n    return buildRepositoryFromLocalStorage()\n}\n\nexport function buildRepositoryFromLocalStorage () {\n    return new TopoRepository(JSON.parse(localStorage.getItem(\"localIndex\")))\n}\n\nasync function reloadLocalDatabase(newHash, googleSheet) {\n    return googleSheet.getRows().then(rows => {\n        const remotedb = rows.map(row => ({ title: row.name, type: row.type, coordinates: row.coordinates.trim().split(';').map(pair => pair.trim().split(',').map(parseFloat)), tags: row.tags.split(',')}))\n        localStorage.setItem(\"localIndex\", JSON.stringify(remotedb))\n        localStorage.setItem(\"localIndexHash\", newHash)\n\n        console.log(`Database: updated to ${newHash}`)\n    })\n}\n\nfunction shouldReload(newHash) {\n    const currentHash = localStorage.getItem(\"localIndexHash\")\n\n    const reload = newHash !== currentHash\n\n    console.log(`Database: current is ${currentHash}, reload=${reload}`)\n    return reload\n}\n\nexport default class TopoRepository {\n\n    constructor(database) {\n        this.database = _(database).orderBy(['title'])\n    }\n\n    search(pattern, useRegex = true, matchMissingAccents = true) {\n        var searchPattern = useRegex ? pattern : pattern.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') \n        searchPattern = matchMissingAccents ? this.accountForMissingAccents(searchPattern) : searchPattern\n        \n        let regex = RegExp(searchPattern, 'i')\n\n        return this.database.filter(entry => regex.test(entry.title)).value()\n    }\n    \n    getAllTags() {\n        let tags = new Set()\n        this.database.map(entry => entry.tags).forEach(tag => tags.add(tag))\n        return Array.from(tags)\n    }\n\n    accountForMissingAccents(pattern){\n        var temp = pattern.replace(\"a\", \"([áa])\")\n                            .replace(\"e\", \"([ée])\")\n                            .replace(\"i\", \"([íi])\")\n                            .replace(\"o\", \"([óo])\")\n                            .replace(\"u\", \"([úu])\")\n        return temp;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport Configuration from './model/configuration'\nimport GSpreadsheet from './model/gSpreadsheet'\nimport { buildRepositoryFromSheet, buildRepositoryFromLocalStorage } from './model/topoRepository'\n\nfunction startApp(repository) {\n  var config = Configuration.readFromLocalStorage()\n  ReactDOM.render(\n    // <React.StrictMode>\n      <App config={config} repository={repository}/>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nGSpreadsheet.load().then(buildRepositoryFromSheet, buildRepositoryFromLocalStorage).then(startApp)\n\n"],"sourceRoot":""}