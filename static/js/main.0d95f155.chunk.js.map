{"version":3,"sources":["App.js","googleCredentials.js","pointRepository.js","pointRepositoryFactory.js","index.js"],"names":["position","App","props","searchBoxRef","React","createRef","state","points","pointRepository","search","searchBoxContents","event","preventDefault","query","this","current","value","setState","Container","Navbar","fixed","bg","expand","variant","Brand","src","alt","Form","inline","onSubmit","handleSearch","bind","FormControl","type","placeholder","ref","MapContainer","center","zoom","scrollWheelZoom","zoomControl","dragging","TileLayer","attribution","url","Object","keys","map","key","Marker","Popup","title","Component","GOOGLE_PRIVATE_KEY","GOOGLE_SERVICE_ACCOUNT_EMAIL","PointRepository","database","_","orderBy","pattern","sanitizeInput","searchPattern","preprocessPattern","regex","RegExp","filter","entry","test","replace","PointRepositoryFactory","googleSheet","a","shouldReload","reloadLocalDatabase","then","localDatabase","Promise","resolve","JSON","parse","localStorage","getItem","remoteElementCount","rowCount","getRows","rows","remoteDatabase","row","Nombri","Latitú","Longitú","tags","Etiquetas","split","setItem","stringify","reload","parseInt","console","log","doc","GoogleSpreadsheet","useServiceAccountAuth","client_email","private_key","loadInfo","sheetsById","initializeConnectionToGoogle","sheet","getRepository","repository","ReactDOM","render","StrictMode","document","getElementById","startApp"],"mappings":"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","file":"static/js/main.0d95f155.chunk.js","sourcesContent":["import './App.css';\n\nimport React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\n\n\nimport { MapContainer, TileLayer, Marker, Popup} from 'react-leaflet'\n\nconst position = [43.19775063914452, -4.029390585676174]\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.searchBoxRef = React.createRef()\n\n    this.state = {\n      points : this.props.pointRepository.search(this.props.searchBoxContents)\n    }\n  }\n  \n    //TODO: update url. \n  handleSearch(event) {\n    event.preventDefault();\n    var query = this.searchBoxRef.current.value\n    this.setState( {points: this.props.pointRepository.search(query)})\n  }\n\n\n  render() {\n    return (\n      <Container>\n        <Navbar fixed=\"top\"  bg=\"dark\" expand=\"lg\" variant=\"dark\">\n          <Navbar.Brand>\n            <img src=\"unicorn.png\" alt=\"Icunu di unicurniu encabritáu\"/></Navbar.Brand>\n          <Form inline onSubmit={this.handleSearch.bind(this)}>\n              <FormControl type=\"text\" placeholder=\"Búsqueda con regexp...\" ref={this.searchBoxRef} />\n          </Form>\n        </Navbar>\n        <MapContainer center={position} zoom={10} scrollWheelZoom={true} zoomControl={false} dragging={true}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {\n            Object.keys(this.state.points).map(function(key) {\n              return <Marker position={this.state.points[key].position} key={key}>\n                <Popup>{this.state.points[key].title}</Popup>\n              </Marker>\n            }.bind(this))\n          }\n        </MapContainer>\n      </Container>\n    );\n  }\n}\n\n\n","export const GOOGLE_PRIVATE_KEY = '-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCefG9PkQxq9Q8d\\noEF/alj8V5RY64c1ozOBZ6E1q55/u/3jrqn4I0raEzk2STOW4brhZsovCgUepZjY\\nMSb6oDyTzsBP4rXQWUM3HaZoAJRFQBx92FsFHkZSOSliIQt02oJWzDJ1P/U1DtKp\\nZHLTT3drO6wZx7T33WSIiEaWBvcxNbHFNxbGeE0g3I2HnORh4qtaTUMQZzE4nhnM\\nVmhsfesfkhah02SULQTWCjDprNShMFuUrIQfpmLmdLsOF8gbY/11WyYh9c/y2xSW\\ncenzkrFqbjM6wMgjrmIJFg6Mn67GVHBqqbl/3lgqKHz/0lRTFZZ4tOnnmOt26DyO\\nGj8QWm9tAgMBAAECggEAFB3KSSipkVfqo8GIHsKiaeE58LFwl5PQAVBki3nto9v6\\nRXCRnW/pW9XN0MCo3jFntZ2E80SL0tCFHofaoTw+hCpdiaZGmpwB5piKWzAbodCZ\\n7TVNlFA778rWoGB+YkYr/hVsICrOln37qkmYM48mIsPPu/P32fBNhvD5OKjIroOl\\neON/OO/0ABPr4XL26Jjw5pDYv+Gw5h9Y9ktg9P7HdPpP8J9tPyN5fidwDwtfqxqW\\nnH5cP4JNlPvzRlOb6rpqD4iZPKa0Zc1Yb96HVqwlVtoXGU+Bqsxx8mq0yzNNZEUe\\nEKuH1YASufnTLb0Yek8kY16tGTpAnK7MbwDDbxwykQKBgQDYgZG7hmyPSG2zAdZO\\nVgKCr7yMLW5hE7+yIGksoHBsi6MvewwCHUiijayKR7ndIjLdTJpisGAePduiSlyX\\nVwTvQH/8L/WuOFhRk20fmaUcB7XdsJNOHg2AnEZJIEl2ECRWajy1WVqBZja2T2HO\\nx4u9yTiYsxtYXRqtnwKmfmoMJQKBgQC7ZXAFNLcg1OGFjrCWJvZJNdwWZ40vXe7Z\\n+upBjku8535sdFXcSMzSYDfqG1uQTxTUT1Wknb4p98+y2GpaYSyLkbLfEAXqeOQ3\\n13VEDzEmMkhgg5auUHggkFIsPp4vfg3uZnzJxQ3bWW5ss6mWOlnU6ktTIaVDfQn7\\nJOlEOGVPqQKBgBDRh+OcXqSGyNbGBsLRFaLXSftNsCxkX1jUAbeQwwr7kfKnSViE\\ns9bE0KlxRvPxqyfbwoZ2ExFmVsB1rFmpTd3UEd0iUKB3Cg1UOX7h7ZyO0Mbm55qC\\n5SOfgCpAEtTUDi6UVCD2TvyMVyW0ZvGsOKPGlNnv1+j2WpMwLgGHAm/tAoGBAKtl\\n3g2E57JJw3PKzMypGj5f2stLLyERwzLwgm4vXiqLeWBtD1MJ6vzIMJwZJahaDG0b\\nmvOTq6jrFbc4ph3AH2QQgQ/wsdiBdgt1L7ZuRr/u4bAU6y7IPvdZyS7anwhFPSy9\\n5IkPiNsFczBNK2FSQXOyT+7bKTMPHJ/uZMSW6GLxAoGBANAkSdBjQ4f60eydWGUE\\n2oQwp+PK6RCKUiKYavZ3LvTYbkXK1xIqG9YCSPYtrpbmJ1to8qR7dEnTrheq5wKU\\nnscmiIABU791zvT1SwHyOj2lfa4TtX0F5qA4Xv2pxe0vkFXov3ayTNQqELBOsT3w\\n1UA4jtC7veJBnOIX3f7aPknP\\n-----END PRIVATE KEY-----\\n'\nexport const GOOGLE_SERVICE_ACCOUNT_EMAIL = 'place-names-of-cantabria@toponymy-cantabria.iam.gserviceaccount.com'\nexport const GOOGLE_DOC_ID = '1Rd8TQOp2hSBOxhSeAaLeb_faICF2_oAv2-jtn2vgXrY'\nexport const GOOGLE_SHEET_ID = '0'\n  ","import _ from 'lodash'\n\nexport default class PointRepository {\n\n    constructor(database) {\n        this.database = _(database).orderBy(['title'])\n    }\n\n    search(pattern, sanitizeInput=true) {\n        var searchPattern = sanitizeInput ? this.preprocessPattern(pattern) : pattern\n        let regex = RegExp(searchPattern, 'i')\n\n        return this.database.filter(entry => regex.test(entry.title)).value()\n    }\n\n    preprocessPattern(pattern){\n        var temp = pattern.replace(\"a\", \"([áa])\")\n                            .replace(\"e\", \"([ée])\")\n                            .replace(\"i\", \"([íi])\")\n                            .replace(\"o\", \"([óo])\")\n                            .replace(\"u\", \"([úu])\")\n        return temp;\n    }\n}","import PointRepository from './pointRepository'\n\nexport default class PointRepositoryFactory {\n    constructor(googleSheet) {\n        this.googleSheet = googleSheet\n    }\n\n    async getRepository() {\n        return this.shouldReload() \n            ? this.reloadLocalDatabase().then(localDatabase => new PointRepository(localDatabase))\n            : Promise.resolve(new PointRepository(JSON.parse(localStorage.getItem(\"localIndex\"))))\n    }\n\n    async reloadLocalDatabase() {\n        const remoteElementCount = this.googleSheet.rowCount\n        return this.googleSheet.getRows().then(rows => {\n            const remoteDatabase = rows.map(row => ({ title: row.Nombri, position: [row.Latitú, row.Longitú], tags: row.Etiquetas.split(',')}))\n            localStorage.setItem(\"localIndex\", JSON.stringify(remoteDatabase) )\n            localStorage.setItem(\"localIndexSize\", remoteElementCount)\n        })\n    }\n\n    shouldReload() {\n        const localStorageElementCount = parseInt(localStorage.getItem(\"localIndexSize\"))\n        const remoteDbElementCount = parseInt(this.googleSheet.rowCount)\n\n        const reload = localStorageElementCount !== remoteDbElementCount\n\n        console.log(`Database: reload =${reload}`)\n        return reload\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\nimport {GOOGLE_DOC_ID, GOOGLE_SHEET_ID, GOOGLE_PRIVATE_KEY, GOOGLE_SERVICE_ACCOUNT_EMAIL} from './googleCredentials'\nimport PointRepositoryFactory from './pointRepositoryFactory'\n\nconst doc = new GoogleSpreadsheet(GOOGLE_DOC_ID);\n\nasync function initializeConnectionToGoogle() {\n  await doc.useServiceAccountAuth({\n    client_email: GOOGLE_SERVICE_ACCOUNT_EMAIL,\n    private_key: GOOGLE_PRIVATE_KEY,\n  });\n  console.log(\"Service account: initialized...\");\n\n  await doc.loadInfo(); \n  console.log(`Document info: loaded -> ${doc.title}`);\n\n  return await doc.sheetsById[GOOGLE_SHEET_ID]\n}\n\nfunction startApp(repository) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App pointRepository={repository} searchBoxContents={\"\"}/>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\ninitializeConnectionToGoogle().then( sheet => new PointRepositoryFactory(sheet).getRepository()).then(repository => startApp(repository))"],"sourceRoot":""}