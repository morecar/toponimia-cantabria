{"version":3,"sources":["staticData/localization.js","components/SearchBar.js","components/SettingsPopover.js","components/TagsContainer.js","components/MapMarker.js","staticData/constants.js","components/ResultsMap.js","components/ResultsPage.js","components/routing/ResultsRoute.js","components/CapturePage.js","components/routing/CaptureRoute.js","components/routing/HomeRoute.js","App.js","model/configuration.js","staticData/googleCredentials.js","model/gSpreadsheet.js","model/topoRepository.js","index.js"],"names":["ROUTE_SEARCH","ROUTE_RESULT","BRAND_NAME","ast","esp","BRAND_ALT","SEARCH_PLACEHOLDER","SEARCH_REGEX_PLACEHOLDER","SearchBar","props","searchBar","React","createRef","state","tags","rawQuery","searchString","queryString","event","preventDefault","query","this","current","value","trim","url","generatePath","encodeURIComponent","history","push","onSearch","config","searchAutocompleteUnderdoth","regex","RegExp","replace","match","offset","string","startsWith","Form","inline","onSubmit","handleSearch","bind","FormControl","type","defaultValue","onChange","handleChange","placeholder","language","ref","Component","SettingsPopover","target","id","checked","resultsTitle","resultsTags","resultsTypes","Array","from","Set","add","filter","e","searchUseRegex","searchAutocompleteTags","searchDisplayTagPalette","onSettingsUpdated","popOverProps","repository","searchBoxContents","Popover","Content","Group","handleToggleChanged","Label","Check","defaultChecked","label","name","disabled","includes","TagsContainer","Tooltip","permanent","direction","className","Object","keys","map","key","Badge","variant","getLabel","tag","endsWith","split","pop","MapMarker","Marker","position","Popup","to","hash","title","displayTags","CENTER_CANTABRIA","getCentroid","arr","reduce","x","y","length","ResultsMap","blackOptions","color","MapContainer","center","zoom","scrollWheelZoom","zoomControl","dragging","TileLayer","attribution","points","coordinates","polys","Polygon","pathOptions","positions","lines","Polyline","ResultsPage","search","queryResults","getFromQueryString","wordId","singleResult","getFromId","buildResults","displayLines","displayPolys","displayPoints","useRegex","newQueryString","setState","point","Container","Navbar","fixed","bg","expand","Brand","src","alt","Toggle","aria-controls","Collapse","Nav","updateResults","getAllTags","NavItem","OverlayTrigger","trigger","placement","overlay","handleSettingsUpdated","rootClose","style","ResultsRoute","URLSearchParams","useLocation","get","undefined","useHistory","LocationMarker","useMapEvents","click","latlng","lat","lng","onClick","CapturePage","searchBoxRef","newPoints","newPointsLength","dashArray","registerLocation","project","HomeRoute","App","basename","path","children","CONFIG_LOCALSTORAGE_KEY","DEFAULT_CONFIG","lang","results_title","results_tags","results_types","search_use_regex","search_autocomplete_underdoth","search_autocomplete_tags","search_display_tag_palette","ConfigService","entries","forEach","localStorage","setItem","JSON","stringify","_config","newConfig","writeToLocalStorage","newLanguage","newResultsTitle","newResultsTags","newResultsTypes","newSearchAutocompleteUnderdoth","newSearchAutocompleteTags","newSearchDisplayTagPalette","newSearchUseRegex","parse","getItem","GOOGLE_INFO_SHEET_CELL","GSpreadsheet","doc","connect","loadInfo","console","log","sheetsByTitle","info_sheet","loadCells","getCellByA1","sheet","GoogleSpreadsheet","useApiKey","spreadsheet","a","shouldReload","reloadLocalDatabase","buildRepositoryFromLocalStorage","TopoRepository","newHash","googleSheet","getRows","then","rows","remotedb","row","pair","parseFloat","currentHash","reload","database","_","orderBy","queryRegex","entry","test","toLowerCase","result","load","Configuration","readFromLocalStorage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7aa6ada.chunk.js","sourcesContent":["export const ROUTE_HOME = '/'\nexport const ROUTE_CAPTURE = '/nuivu'\nexport const ROUTE_SEARCH = '/busqueda'\nexport const ROUTE_RESULT = '/palabra'\nexport const ROUTE_SEARCH_PATTERN = ROUTE_SEARCH+'?q=:query'\nexport const ROUTE_RESULT_PATTERN = ROUTE_RESULT+'?h=:hash'\n\nexport const NEW_MS = {ast: 'Nuivu', esp: 'Nuevo'}\nexport const BRAND_NAME = {ast: \"L'Unicurniu\", esp: \"L'Unicurniu\"}\nexport const BRAND_ALT = {ast: 'Imagin de cabeza di unicurniu', esp: 'Imagen de cabeza de unicornio'}\n\nexport const SEARCH_PLACEHOLDER = {ast: 'Iscribi la tu búsqueda…', esp: 'Escribe tu búsqueda…'}\nexport const SEARCH_REGEX_PLACEHOLDER = {ast: 'Búsqueda con regexp…', esp: 'Búsqueda con regexp…'}","import React, { Component} from 'react';\nimport {generatePath} from 'react-router'\n\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\n\nimport {ROUTE_SEARCH_PATTERN, ROUTE_HOME, SEARCH_PLACEHOLDER, SEARCH_REGEX_PLACEHOLDER} from '../staticData/localization'\n\nexport default class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.searchBar = React.createRef()\n        \n        this.state = {\n            tags: [],\n            rawQuery: \"\",\n            searchString: this.props.queryString\n        }\n    }\n    \n    handleSearch(event) {\n        event.preventDefault();\n        var query = this.searchBar.current.value.trim()\n        const url = query === \"\" \n                    ? generatePath(ROUTE_HOME)\n                    : generatePath(ROUTE_SEARCH_PATTERN, {query: encodeURIComponent(query)})\n        this.props.history.push(url)\n        this.props.onSearch(query)     \n    }\n    \n    handleChange(event) {\n        if(this.props.config.searchAutocompleteUnderdoth) {\n            let regex = RegExp(/h\\.\\S/, 'i')\n            this.searchBar.current.value = this.searchBar.current.value.replace(regex, (match, offset, string) => {return match.startsWith('h') ? `ḥ${string[offset+2]}` : `Ḥ${[offset+2]}` })\n        }\n    }\n    \n    render() {\n        return (\n            <Form inline onSubmit={this.handleSearch.bind(this)}>\n                <FormControl type=\"text\" defaultValue={this.props.value} onChange={this.handleChange.bind(this)} placeholder={this.props.regex?SEARCH_REGEX_PLACEHOLDER[this.props.config.language]:SEARCH_PLACEHOLDER[this.props.config.language]} ref={this.searchBar}/>\n            </Form>\n            )\n        }\n    }","import React, { Component} from 'react';\n\nimport Form from 'react-bootstrap/Form'\nimport Popover from 'react-bootstrap/Popover'\n\nexport default class SettingsPopover extends Component {\n\n\n    handleToggleChanged(event) {\n        if(event.target.id === 'show-title-always' && event.target.checked) this.props.config.resultsTitle = 'always'\n        if(event.target.id === 'show-title-search' && event.target.checked) this.props.config.resultsTitle = 'search'\n        if(event.target.id === 'show-title-never' && event.target.checked) this.props.config.resultsTitle = 'never'\n\n        if(event.target.id === 'show-tags-always' && event.target.checked) this.props.config.resultsTags = 'always'\n        if(event.target.id === 'show-tags-search' && event.target.checked) this.props.config.resultsTags = 'search'\n        if(event.target.id === 'show-tags-never' && event.target.checked) this.props.config.resultsTags = 'never'\n\n        if(event.target.id === 'toggle-points')\n            this.props.config.resultsTypes =  event.target.checked\n                                                    ? Array.from(new Set(this.props.config.resultsTypes).add('point'))\n                                                    : this.props.config.resultsTypes.filter(e => e!=='point')\n\n        if(event.target.id === 'toggle-lines')\n            this.props.config.resultsTypes =  event.target.checked \n                                                    ? Array.from(new Set(this.props.config.resultsTypes).add('line'))\n                                                    : this.props.config.resultsTypes.filter(e => e!=='line')\n\n        if(event.target.id === 'toggle-polygons')\n            this.props.config.resultsTypes =  event.target.checked \n                                                    ? Array.from(new Set(this.props.config.resultsTypes).add('poly'))\n                                                    : this.props.config.resultsTypes.filter(e => e!=='poly')\n\n        if(event.target.id === 'toggle-regex') this.props.config.searchUseRegex = event.target.checked\n        if(event.target.id === 'toggle-underdoth') this.props.config.searchAutocompleteUnderdoth = event.target.checked\n        if(event.target.id === 'toggle-tag-auto') this.props.config.searchAutocompleteTags = event.target.checked   \n        if(event.target.id === 'toggle-tag-palette') this.props.config.searchDisplayTagPalette = event.target.checked  \n        \n        this.props.onSettingsUpdated()\n    }\n\n    render() {\n        const { repository, searchBoxContents, onSettingsUpdated, ...popOverProps} = this.props\n        return (         \n              <Popover {...popOverProps}>\n                <Popover.Content>\n                  <Form>\n                    <Form.Group onChange={this.handleToggleChanged.bind(this)}>\n                        <Form.Label><b>Veyer tupúnimu</b></Form.Label>\n                        <div>\n                            <Form.Check defaultChecked={this.props.config.resultsTitle === 'always'} label='Siempri' type='radio' id='show-title-always' name='showTitle' disabled/>\n                            <Form.Check defaultChecked={this.props.config.resultsTitle === 'search'} label='In búsquedas' type='radio' id='show-title-search' name='showTitle' disabled/>\n                            <Form.Check defaultChecked={this.props.config.resultsTitle === 'never'} label='In cliquiandu' type='radio' id='show-title-never' name='showTitle' disabled/>\n                        </div>\n                    </Form.Group>\n                    <Form.Group onChange={this.handleToggleChanged.bind(this)}>\n                        <Form.Label><b>Veyer etiquetas</b></Form.Label>\n                        <div>   \n                            <Form.Check defaultChecked={this.props.config.resultsTags === 'always'} label='Siempri' type='radio' id='show-tags-always' name='showTags'/>\n                            <Form.Check defaultChecked={this.props.config.resultsTags === 'search'} label='In búsquedas' type='radio' id='show-tags-search' name='showTags'/>\n                            <Form.Check defaultChecked={this.props.config.resultsTags === 'never'} label='Desactivás' type='radio' id='show-tags-never' name='showTags'/>\n                            \n                        </div>\n                    </Form.Group>\n                    <Form.Group onChange={this.handleToggleChanged.bind(this)}>\n                        <Form.Label><b>Clas de resultáus</b></Form.Label>\n                        <div>                          \n                            <Form.Check inline defaultChecked={this.props.config.resultsTypes.includes('point')} label='Puntualis' type={'checkbox'} id={'toggle-points'} />\n                            <Form.Check inline defaultChecked={this.props.config.resultsTypes.includes('line')} label='Linialis' type={'checkbox'} id={'toggle-lines'} disabled/>\n                            <Form.Check inline defaultChecked={this.props.config.resultsTypes.includes('poly')} label='Zonalis' type={'checkbox'}  id={'toggle-polygons'} disabled/>\n                        </div>\n                    </Form.Group>\n                    <Form.Group onChange={this.handleToggleChanged.bind(this)}>\n                        <Form.Label><b>Otrus</b></Form.Label>\n                        <Form.Check defaultChecked={this.props.config.searchUseRegex} type='switch' id='toggle-regex' label='Búsqueda con regex' />\n                        <Form.Check defaultChecked={this.props.config.searchAutocompleteUnderdoth} type='switch' id='toggle-underdoth' label='Detectar hachi supuntiá (h.→ḥ)'/>\n                        <Form.Check defaultChecked={this.props.config.searchAutocompleteTags} type='switch' id='toggle-tag-auto' label='Autucompletar etiquetas' disabled/>\n                        <Form.Check defaultChecked={this.props.config.searchDisplayTagPalette} type='switch' id='toggle-tag-palette' label='Veyer paleta etiquetas' disabled/>\n                    </Form.Group>\n                  </Form>\n                </Popover.Content>\n              </Popover>\n        )\n    }\n}\n\n","import {Tooltip} from 'react-leaflet'\nimport Badge from 'react-bootstrap/Badge'\n\nexport default function TagsContainer(props) {\n    return (\n        <Tooltip permanent={true} direction={'bottom'} offset={[-15, 20]} className={\"tagsContainer\"}>\n            {\n                Object.keys(props.tags).map(function(key) {\n                    return  <span key={key}><Badge variant={\"primary\"}>{getLabel(props.tags[key])}</Badge>{' '}</span>\n                })\n            }\n        </Tooltip>\n    );\n  }\n\nfunction getLabel(tag) {\n    if(tag.startsWith(\"etymology\")) {\n        if(tag.endsWith(\"celtic\")) return \"Et: Celta\"\n        if(tag.endsWith(\"romance\")) return \"Et: Romanci\"\n    }\n    if(tag.startsWith(\"phonology\")) {\n        if(tag.endsWith(\"metaphony_u\")) return \"Metafunía U\"\n        if(tag.endsWith(\"aspirate_f\")) return \"F aspiráu\"\n        if(tag.endsWith(\"b_g\")) return \"Cambiu B > G\"\n        if(tag.endsWith(\"lost_f\")) return \"F mudu\"\n    }\n\n    return tag.split(':').pop()\n} ","import { Marker, Popup} from 'react-leaflet'\n\nimport { Link, generatePath } from \"react-router-dom\"\n\nimport { ROUTE_RESULT_PATTERN } from '../staticData/localization'\n\nimport TagsContainer from './TagsContainer'\n\nexport default function MapMarker(props) {\n    return (\n        <Marker position={props.position}>\n            <Popup><Link to={generatePath(ROUTE_RESULT_PATTERN, {hash: props.hash})}>{props.title}</Link></Popup>\n            {props.displayTags?<TagsContainer tags={props.tags}/>:null}\n        </Marker>\n    );\n  }","export const CENTER_CANTABRIA = [43.19775063914452, -4.029390585676174]\nexport const BASENAME = \"/toponimia-cantabria\"","import { MapContainer, TileLayer, Polyline, Polygon} from 'react-leaflet'\n\nimport MapMarker from './MapMarker';\n\nimport {CENTER_CANTABRIA} from '../staticData/constants'\n\nfunction getCentroid(arr) { \n    return arr.reduce(function (x,y) {\n        return [x[0] + y[0]/arr.length, x[1] + y[1]/arr.length] \n    }, [0,0]) \n}\n\nexport default function ResultsMap(props) {\n    const blackOptions = { color: 'black' }\n    return (\n        <MapContainer center={CENTER_CANTABRIA} zoom={10} scrollWheelZoom={true} zoomControl={false} dragging={true}>   \n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {\n            Object.keys(props.points).map(function(key) {\n              return <MapMarker displayTags={props.displayTags} key={props.points[key].hash} position={props.points[key].coordinates[0]} {...props.points[key]}/>\n            })\n          }\n          {\n            Object.keys(props.polys).map(function(key) {\n              return <div key={key}>\n                      <Polygon pathOptions={blackOptions} positions={props.polys[key].coordinates} />\n                      <MapMarker displayTags={props.displayTags} key={props.polys[key].hash} position={getCentroid(props.polys[key].coordinates)} {...props.polys[key]}/>\n                    </div>\n            })\n          }\n          {\n            Object.keys(props.lines).map(function(key) {\n              return <div key={key}>\n                      <Polyline pathOptions={blackOptions} positions={props.lines[key].coordinates} />\n                      <MapMarker displayTags={props.displayTags} key={props.lines[key].hash} position={getCentroid(props.lines[key].coordinates)} {...props.lines[key]}/>\n                    </div>\n            })\n          }\n        </MapContainer>\n    );\n}","import React, { Component} from 'react';\n\nimport {Container, Navbar, Nav, NavItem, OverlayTrigger} from 'react-bootstrap';\nimport {Toggles} from 'react-bootstrap-icons';\n\nimport SearchBar from './SearchBar'\nimport SettingsPopover from './SettingsPopover'\n\nimport {BRAND_ALT, BRAND_NAME} from '../staticData/localization'\nimport ResultsMap from './ResultsMap';\n\nfunction buildResults(props) {\n  if(!props.search) {\n    return {queryString:\"\",  queryResults: props.repository.getFromQueryString(\"\")}\n  }\n\n  if(props.wordId) {\n    const singleResult = props.repository.getFromId(props.wordId) ?? {queryString: \"\", queryResults: []}\n    return {queryString: singleResult.title, queryResults: [singleResult]}\n  }\n\n  return {queryString: props.queryString,  queryResults: props.repository.getFromQueryString(props.queryString)}\n}\n\nexport default class ResultsPage extends Component {\n  constructor(props) {\n    super(props);    \n    const {queryString, queryResults} = buildResults(props)\n    this.state = {\n      //Displayed content\n      queryString: queryString,\n      queryResults: queryResults,\n      //Results from settings\n      displayTags: (props.config.resultsTags === 'always') || (props.config.resultsTags === 'search' && props.search),\n      displayLines: (props.config.resultsTypes.includes('line')),\n      displayPolys: (props.config.resultsTypes.includes('poly')),\n      displayPoints: (props.config.resultsTypes.includes('point')),\n      useRegex: props.config.searchUseRegex\n    }\n  }\n\n  updateResults(newQueryString) {\n    this.setState( {\n      queryString: newQueryString,\n      queryResults: this.props.repository.getFromQueryString(newQueryString, this.props.config.searchUseRegex),\n      displayTags: (this.props.config.resultsTags === 'always') || (this.props.config.resultsTags === 'search' && newQueryString ? true : false)\n    })\n  }\n\n  handleSettingsUpdated() {\n    this.setState(\n      {\n        displayTags: (this.props.config.resultsTags === 'always') || (this.props.config.resultsTags === 'search' && this.state.search),\n        displayLines: (this.props.config.resultsTypes.includes('line')),\n        displayPolys: (this.props.config.resultsTypes.includes('poly')),\n        displayPoints: (this.props.config.resultsTypes.includes('point')),\n        useRegex: this.props.config.searchUseRegex\n      }\n    )\n  }\n\n  render() {\n    const points = this.state.displayPoints ? this.state.queryResults.filter(point => point.type === 'point') : []\n    const polys = this.state.displayPolys ? this.state.queryResults.filter(point => point.type === 'poly') : []\n    const lines = this.state.displayLines ? this.state.queryResults.filter(point => point.type === 'line') : []\n    return (\n      <Container>\n        <Navbar fixed=\"top\"  bg=\"dark\" expand=\"lg\" variant=\"dark\">\n          <Navbar.Brand>\n            <img src=\"./unicorn.png\" alt={BRAND_ALT[this.props.config.language]}/>\n          </Navbar.Brand> \n          <Navbar.Brand className={'main-brand'}>{BRAND_NAME[this.props.config.language]}</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />        \n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <SearchBar onSearch={this.updateResults.bind(this)} value={this.state.queryString} tags={this.props.repository.getAllTags()} regex={this.state.useRegex} {...this.props}/>\n              <NavItem id=\"settings\">\n              <OverlayTrigger trigger=\"click\" placement={'bottom'} overlay={<SettingsPopover  onSettingsUpdated={this.handleSettingsUpdated.bind(this)} {...this.props}/>} rootClose> \n                  <Toggles style={{'fontSize': 'xx-large'}}/>\n              </OverlayTrigger>\n              </NavItem>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <ResultsMap points={points} lines={lines} polys={polys} displayTags={this.state.displayTags} {...this.props}/>\n      </Container>\n    );\n  }\n}\n\n","import { Redirect, useLocation, useHistory } from \"react-router-dom\";\nimport { ROUTE_HOME } from \"../../staticData/localization\";\n\nimport ResultsPage from '../ResultsPage'\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function ResultsRoute(props) {\n    let query = useQuery();\n    let search = { \"wordId\": query.get('h') ?? undefined, \"queryString\": query.get('q') ?? \"\" }\n    let history = useHistory()\n\n    if(!search.wordId && !search.queryString) return <Redirect to={ROUTE_HOME}/>\n    else return <ResultsPage repository={props.repository} search=\"true\" {...search} {...props} history={history}/>\n\n}\n","import React, { Component} from 'react';\n\nimport Container from 'react-bootstrap/Container'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { MapContainer, TileLayer, Marker, useMapEvents, Polyline } from 'react-leaflet'\n\nimport {CENTER_CANTABRIA} from '../staticData/constants'\n\n\nfunction LocationMarker(props) {\n  useMapEvents({\n    click(event) {\n      const { lat, lng } = event.latlng;\n      props.onClick([lat, lng])\n    }\n  })\n}\n\nexport default class CapturePage extends Component {\n  constructor(props) {\n    super(props);\n    this.searchBoxRef = React.createRef()\n\n    this.state = {\n      newPoints : []\n    }\n  }\n\n\n  registerLocation(position) {\n    this.setState({ newPoints: [...this.state.newPoints, position]})\n  }\n\n\n  render() {\n    const blackOptions = { color: 'black' }\n    const limeOptions = { color: 'black', dashArray: \"4\" }\n    const newPointsLength = this.state.newPoints.length-1\n    return (\n      <Container>\n        <MapContainer center={CENTER_CANTABRIA} zoom={10} scrollWheelZoom={true} zoomControl={false} dragging={true}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n\n{\n            Object.keys(this.state.newPoints).map(function(key) {\n              return <Marker position={this.state.newPoints[key]} key={key}>\n              </Marker>\n            }.bind(this))\n           }\n\n        <Polyline pathOptions={blackOptions} positions={this.state.newPoints} />\n\n          {\n            this.state.newPoints.length > 2 \n            ? <Polyline pathOptions={limeOptions} positions={[this.state.newPoints[0], this.state.newPoints[newPointsLength]]} />\n            : null\n          }\n          <LocationMarker onClick={this.registerLocation.bind(this)}/>\n        </MapContainer>\n        <Navbar fixed=\"bottom\"  bg=\"dark\" expand=\"lg\" variant=\"dark\">\n          <Navbar.Brand>\n            <img src=\"./unicorn.png\" alt=\"Icunu di unicurniu encabritáu\"/>\n          </Navbar.Brand>          \n        </Navbar>\n      </Container>\n    );\n  }\n}","import { useHistory, useLocation } from \"react-router-dom\";\n\nimport CapturePage from '../CapturePage'\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function ResultsRoute(props) {\n    let query = useQuery();\n    let project = { \"project\": query.get('p') ?? undefined }\n\n    return  <CapturePage repository={props.repository} project={project} {...props} history={useHistory()}/>\n\n}\n","import { useHistory } from \"react-router-dom\";\n\nimport ResultsPage from '../ResultsPage'\n\nexport default function HomeRoute(props) {\n    const history = useHistory()\n    return <ResultsPage repository={props.repository} {...props} search=\"false\" history={history}/>\n}\n","import './App.css';\n\nimport React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport ResultsRoute from './components/routing/ResultsRoute'\nimport CaptureRoute from './components/routing/CaptureRoute'\nimport HomeRoute from './components/routing/HomeRoute'\n\nimport { BASENAME } from './staticData/constants'\nimport { ROUTE_HOME, ROUTE_CAPTURE, ROUTE_SEARCH, ROUTE_RESULT } from './staticData/localization.js'\n\nexport default function App(props) {\n    return (\n        <Router basename={BASENAME}>\n            <Switch>\n                <Route path={ROUTE_CAPTURE} children={<CaptureRoute {...props} />} />\n                <Route path={ROUTE_SEARCH} children={<ResultsRoute {...props} />} />\n                <Route path={ROUTE_RESULT} children={<ResultsRoute {...props} />} />\n                <Route path={ROUTE_HOME} children={<HomeRoute {...props} />} />\n            </Switch>\n        </Router>\n    )\n}\n\n\n\n\n","\nconst CONFIG_LOCALSTORAGE_KEY = \"config\"\n\nconst DEFAULT_CONFIG = {\n    lang: 'ast',\n    results_title: 'never',\n    results_tags: 'search',\n    results_types: ['point'],\n    search_use_regex: true,\n    search_autocomplete_underdoth: true,\n    search_autocomplete_tags: false,\n    search_display_tag_palette: false\n  }\n\nexport default class ConfigService {\n    constructor(config) {\n        Object.entries(DEFAULT_CONFIG).forEach(([key, defaultValue]) => (config[key] = config[key]??defaultValue))\n\n        this.config = config\n    }\n\n    static readFromLocalStorage() {\n        return new ConfigService(JSON.parse(localStorage.getItem(CONFIG_LOCALSTORAGE_KEY) ?? \"{}\"))\n    }\n\n    writeToLocalStorage() {\n        localStorage.setItem(CONFIG_LOCALSTORAGE_KEY, JSON.stringify(this._config))\n    }\n\n    set config(newConfig) {\n        this._config = newConfig\n        this.writeToLocalStorage()\n    }\n\n    get language() {\n        return this._config.lang\n    }\n\n    set language(newLanguage) {\n        this._config.lang = newLanguage;\n        this.writeToLocalStorage()\n    }\n\n    get resultsTitle() {\n        return this._config.results_title\n    }\n\n    set resultsTitle(newResultsTitle) {\n        this._config.results_title = newResultsTitle;\n        this.writeToLocalStorage()\n    }\n\n    get resultsTags() {\n        return this._config.results_tags\n    }\n\n    set resultsTags(newResultsTags) {\n        this._config.results_tags = newResultsTags;\n        this.writeToLocalStorage()\n    }\n\n    get resultsTypes() {\n        return this._config.results_types\n    }\n\n    set resultsTypes(newResultsTypes) {\n        this._config.results_types = newResultsTypes;\n        this.writeToLocalStorage()\n    }\n\n    get searchAutocompleteUnderdoth() {\n        return this._config.search_autocomplete_underdoth\n    }\n\n    set searchAutocompleteUnderdoth(newSearchAutocompleteUnderdoth) {\n        this._config.search_autocomplete_underdoth = newSearchAutocompleteUnderdoth;\n        this.writeToLocalStorage()\n    }\n\n    get searchAutocompleteTags() {\n        return this._config.search_autocomplete_tags\n    }\n\n    set searchAutocompleteTags(newSearchAutocompleteTags) {\n        this._config.search_autocomplete_tags = newSearchAutocompleteTags;\n        this.writeToLocalStorage()\n    }\n\n    get searchDisplayTagPalette() {\n        return this._config.search_display_tag_palette\n    }\n\n    set searchDisplayTagPalette(newSearchDisplayTagPalette) {\n        this._config.search_display_tag_palette = newSearchDisplayTagPalette;\n        this.writeToLocalStorage()\n    }\n\n    get searchUseRegex() {\n        return this._config.search_use_regex\n    }\n\n    set searchUseRegex(newSearchUseRegex) {\n        this._config.search_use_regex = newSearchUseRegex;\n        this.writeToLocalStorage()\n    }\n}","export const GOOGLE_SHEETS_API_KEY = 'AIzaSyBl_GJjcKmg4Lk0dWPLzGX6bXpT0vXW5R0'\n\nexport const GOOGLE_DOC_ID = '1Rd8TQOp2hSBOxhSeAaLeb_faICF2_oAv2-jtn2vgXrY'\nexport const GOOGLE_DB_SHEET_TITLE = 'DB'\nexport const GOOGLE_INFO_SHEET_TITLE = 'INFO'\nexport const GOOGLE_INFO_SHEET_CELL = 'A1'\n\n","import { GoogleSpreadsheet } from 'google-spreadsheet';\nimport { GOOGLE_DOC_ID, GOOGLE_DB_SHEET_TITLE, GOOGLE_INFO_SHEET_TITLE, GOOGLE_INFO_SHEET_CELL, GOOGLE_SHEETS_API_KEY } from '../staticData/googleCredentials'\n\nexport default class GSpreadsheet {\n  static async load() {\n    const doc = this.connect()\n    await doc.loadInfo(); \n    console.log(`Spreadsheets: loaded document ${doc.title}`);\n\n    const info_sheet = await doc.sheetsByTitle[GOOGLE_INFO_SHEET_TITLE]\n    await info_sheet.loadCells(`${GOOGLE_INFO_SHEET_CELL}:${GOOGLE_INFO_SHEET_CELL}`)\n    \n    return  {\n              hash: info_sheet.getCellByA1(GOOGLE_INFO_SHEET_CELL).value,\n              sheet: await doc.sheetsByTitle[GOOGLE_DB_SHEET_TITLE]\n            }\n  }\n\n  static connect() {\n    const doc = new GoogleSpreadsheet(GOOGLE_DOC_ID);\n    doc.useApiKey(GOOGLE_SHEETS_API_KEY)\n    return doc\n  }\n}","import _ from 'lodash'\n\nexport async function buildRepositoryFromSheet(spreadsheet) {\n    if (shouldReload(spreadsheet.hash)) \n        await reloadLocalDatabase(spreadsheet.hash, spreadsheet.sheet)\n\n    return buildRepositoryFromLocalStorage()\n}\n\nexport function buildRepositoryFromLocalStorage () {\n    return new TopoRepository(JSON.parse(localStorage.getItem(\"localIndex\")))\n}\n\nasync function reloadLocalDatabase(newHash, googleSheet) {\n    return googleSheet.getRows().then(rows => {\n        const remotedb = rows.map(row => ({ hash: row.hash, title: row.name, type: row.type, coordinates: row.coordinates.trim().split(';').map(pair => pair.trim().split(',').map(parseFloat)), tags: row.tags.split(',')}))\n        localStorage.setItem(\"localIndex\", JSON.stringify(remotedb))\n        localStorage.setItem(\"localIndexHash\", newHash)\n\n        console.log(`Database: updated to ${newHash}`)\n    })\n}\n\nfunction shouldReload(newHash) {\n    const currentHash = localStorage.getItem(\"localIndexHash\")\n\n    const reload = newHash !== currentHash\n\n    console.log(`Database: current is ${currentHash}, reload=${reload}`)\n    return reload\n}\n\nexport default class TopoRepository {\n\n    constructor(database) {\n        this.database = _(database).orderBy(['title'])\n    }\n\n    getFromQueryString(queryString, regex = true) {\n        if(regex) {\n            let queryRegex = RegExp(queryString, 'i')\n\n            return this.database.filter(entry => queryRegex.test(entry.title)).value()\n        } else {\n            return this.database.filter(entry => entry.title.toLowerCase().includes(queryString.toLowerCase()))\n        }\n    }\n\n    getFromId(wordId) {\n        const result = this.database.filter(entry => entry.hash === wordId).value()\n        return result?.[0] ?? undefined\n    }\n    \n    getAllTags() {\n        let tags = new Set()\n        this.database.map(entry => entry.tags).forEach(tag => tags.add(tag))\n        return Array.from(tags)\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport Configuration from './model/configuration'\nimport GSpreadsheet from './model/gSpreadsheet'\nimport { buildRepositoryFromSheet, buildRepositoryFromLocalStorage } from './model/topoRepository'\n\nfunction startApp(repository) {\n  var config = Configuration.readFromLocalStorage()\n  ReactDOM.render(\n    // <React.StrictMode>\n      <App config={config} repository={repository}/>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nGSpreadsheet.load().then(buildRepositoryFromSheet, buildRepositoryFromLocalStorage).then(startApp)\n\n"],"sourceRoot":""}