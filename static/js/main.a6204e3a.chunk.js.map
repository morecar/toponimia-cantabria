{"version":3,"sources":["resources/routes.js","components/SearchBar.js","components/SettingsPopover.js","components/TagsContainer.js","components/MapMarker.js","resources/constants.js","components/ResultsMap.js","components/LanguageSelector.js","components/ResultsPage.js","components/routing/ResultsRoute.js","components/CapturePage.js","components/routing/CaptureRoute.js","components/routing/HomeRoute.js","App.js","model/configuration.js","resources/googleCredentials.js","model/gSpreadsheet.js","resources/localization/ast_pas.js","resources/localization/esp.js","resources/localization/unlocalizable.js","model/localization.js","model/topoRepository.js","index.js"],"names":["ROUTE_SEARCH","ROUTE_RESULT","SearchBar","props","searchBar","React","createRef","state","tags","rawQuery","searchString","queryString","event","preventDefault","query","this","current","value","trim","url","generatePath","encodeURIComponent","history","push","onSearch","config","searchAutocompleteUnderdoth","regex","RegExp","replace","match","offset","string","startsWith","Form","inline","onSubmit","handleSearch","bind","FormControl","type","defaultValue","onChange","handleChange","placeholder","loc","get","ref","Component","SettingsPopover","target","id","checked","resultsTitle","resultsTags","resultsTypes","Array","from","Set","add","filter","e","searchUseRegex","searchAutocompleteTags","searchDisplayTagPalette","onSettingsUpdated","popOverProps","repository","searchBoxContents","Popover","Content","Group","handleToggleChanged","Label","Check","defaultChecked","label","name","disabled","includes","TagsContainer","Tooltip","permanent","direction","className","Object","keys","map","key","Badge","variant","MapMarker","Marker","position","Popup","to","hash","title","displayTags","CENTER_CANTABRIA","CONFIG_LOCALSTORAGE_KEY","CONFIG_DEFAULT","locale","results_title","results_tags","results_types","search_use_regex","search_autocomplete_underdoth","search_autocomplete_tags","search_display_tag_palette","getCentroid","arr","reduce","x","y","length","ResultsMap","blackOptions","color","MapContainer","center","zoom","scrollWheelZoom","zoomControl","dragging","TileLayer","attribution","points","coordinates","polys","Polygon","pathOptions","positions","lines","Polyline","LanguageSelector","availableLocales","getBatch","NavDropdown","onClick","onLanguageChanged","alignRight","Item","ResultsPage","search","queryResults","getFromQueryString","wordId","singleResult","getFromId","buildResults","displayLines","displayPolys","displayPoints","useRegex","newQueryString","setState","point","Container","Navbar","fixed","bg","expand","Brand","src","alt","Toggle","aria-controls","Collapse","Nav","updateResults","getAllTags","handleChangeLanguage","NavItem","OverlayTrigger","trigger","placement","overlay","handleSettingsUpdated","rootClose","style","ResultsRoute","URLSearchParams","useLocation","undefined","useHistory","CapturePage","searchBoxRef","newPoints","project","HomeRoute","App","basename","exact","path","children","ConfigService","entries","forEach","localStorage","setItem","JSON","stringify","_config","newConfig","writeToLocalStorage","newLocale","newResultsTitle","newResultsTags","newResultsTypes","newSearchAutocompleteUnderdoth","newSearchAutocompleteTags","newSearchDisplayTagPalette","newSearchUseRegex","parse","getItem","GOOGLE_INFO_SHEET_CELL","GSpreadsheet","doc","connect","loadInfo","console","log","sheetsByTitle","info_sheet","loadCells","getCellByA1","sheet","GoogleSpreadsheet","useApiKey","ast_pas","esp","unlocalizable","Localization","_locale","Locales","Error","l","code","codes","spreadsheet","a","shouldReload","reloadLocalDatabase","buildRepositoryFromLocalStorage","TopoRepository","newHash","googleSheet","getRows","then","rows","remotedb","row","split","pair","parseFloat","currentHash","reload","database","_","orderBy","queryRegex","entry","test","toLowerCase","result","tag","load","Configuration","readFromLocalStorage","localization","createFromConfig","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6204e3a.chunk.js","sourcesContent":["export const ROUTE_HOME = '/'\nexport const ROUTE_CAPTURE = '/nuivu'\nexport const ROUTE_SEARCH = '/busqueda'\nexport const ROUTE_RESULT = '/palabra'\nexport const ROUTE_SEARCH_PATTERN = ROUTE_SEARCH+'?q=:query'\nexport const ROUTE_RESULT_PATTERN = ROUTE_RESULT+'?h=:hash'","import React, { Component} from 'react';\nimport {generatePath} from 'react-router'\n\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\n\nimport {ROUTE_SEARCH_PATTERN, ROUTE_HOME} from '../resources/routes'\n\nexport default class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.searchBar = React.createRef()\n        \n        this.state = {\n            tags: [],\n            rawQuery: \"\",\n            searchString: this.props.queryString\n        }\n    }\n    \n    handleSearch(event) {\n        event.preventDefault();\n        var query = this.searchBar.current.value.trim()\n        const url = query === \"\" \n                    ? generatePath(ROUTE_HOME)\n                    : generatePath(ROUTE_SEARCH_PATTERN, {query: encodeURIComponent(query)})\n        this.props.history.push(url)\n        this.props.onSearch(query)     \n    }\n    \n    handleChange(event) {\n        if(this.props.config.searchAutocompleteUnderdoth) {\n            let regex = RegExp(/h\\.\\S/, 'i')\n            this.searchBar.current.value = this.searchBar.current.value.replace(regex, (match, offset, string) => {return match.startsWith('h') ? `ḥ${string[offset+2]}` : `Ḥ${[offset+2]}` })\n        }\n    }\n    \n    render() {\n        return (\n            <Form inline onSubmit={this.handleSearch.bind(this)}>\n                <FormControl type=\"text\" defaultValue={this.props.value} onChange={this.handleChange.bind(this)} placeholder={this.props.regex?this.props.loc.get(\"search_regex_placeholder\"):this.props.loc.get(\"search_placeholder\")} ref={this.searchBar}/>\n            </Form>\n            )\n        }\n    }","import React, { Component, Fragment} from 'react';\n\nimport Form from 'react-bootstrap/Form'\nimport Popover from 'react-bootstrap/Popover'\n\nexport default class SettingsPopover extends Component {\n\n\n    handleToggleChanged(event) {\n        if(event.target.id === 'show-title-always' && event.target.checked) this.props.config.resultsTitle = 'always'\n        if(event.target.id === 'show-title-search' && event.target.checked) this.props.config.resultsTitle = 'search'\n        if(event.target.id === 'show-title-click' && event.target.checked) this.props.config.resultsTitle = 'click'\n\n        if(event.target.id === 'show-tags-always' && event.target.checked) this.props.config.resultsTags = 'always'\n        if(event.target.id === 'show-tags-search' && event.target.checked) this.props.config.resultsTags = 'search'\n        if(event.target.id === 'show-tags-click' && event.target.checked) this.props.config.resultsTags = 'click'\n\n        if(event.target.id === 'toggle-points')\n            this.props.config.resultsTypes =  event.target.checked\n                                                    ? Array.from(new Set(this.props.config.resultsTypes).add('point'))\n                                                    : this.props.config.resultsTypes.filter(e => e!=='point')\n\n        if(event.target.id === 'toggle-lines')\n            this.props.config.resultsTypes =  event.target.checked \n                                                    ? Array.from(new Set(this.props.config.resultsTypes).add('line'))\n                                                    : this.props.config.resultsTypes.filter(e => e!=='line')\n\n        if(event.target.id === 'toggle-polygons')\n            this.props.config.resultsTypes =  event.target.checked \n                                                    ? Array.from(new Set(this.props.config.resultsTypes).add('poly'))\n                                                    : this.props.config.resultsTypes.filter(e => e!=='poly')\n\n        if(event.target.id === 'toggle-regex') this.props.config.searchUseRegex = event.target.checked\n        if(event.target.id === 'toggle-underdoth') this.props.config.searchAutocompleteUnderdoth = event.target.checked\n        if(event.target.id === 'toggle-tag-auto') this.props.config.searchAutocompleteTags = event.target.checked   \n        if(event.target.id === 'toggle-tag-palette') this.props.config.searchDisplayTagPalette = event.target.checked  \n        \n        this.props.onSettingsUpdated() \n    }\n\n    render() {\n        const { repository, searchBoxContents, onSettingsUpdated, ...popOverProps} = this.props\n        return (         \n              <Popover {...popOverProps}>\n                <Popover.Content>\n                  <Form>\n                    <Form.Group onChange={this.handleToggleChanged.bind(this)}>\n                        <Form.Label><b>{this.props.loc.get(\"show_title\")}</b></Form.Label>\n                        <Fragment>\n                            <Form.Check defaultChecked={this.props.config.resultsTitle === 'always'} label={this.props.loc.get(\"toggle_always\")} type='radio' id='show-title-always' name='showTitle' disabled/>\n                            <Form.Check defaultChecked={this.props.config.resultsTitle === 'search'} label={this.props.loc.get(\"toggle_search\")} type='radio' id='show-title-search' name='showTitle' disabled/>\n                            <Form.Check defaultChecked={this.props.config.resultsTitle === 'click'}  label={this.props.loc.get(\"toggle_click\")}  type='radio' id='show-title-click'  name='showTitle' disabled/>\n                        </Fragment>\n                    </Form.Group>\n                    <Form.Group onChange={this.handleToggleChanged.bind(this)}>\n                    <Form.Label><b>{this.props.loc.get(\"show_tags\")}</b></Form.Label>\n                        <Fragment>   \n                            <Form.Check defaultChecked={this.props.config.resultsTags === 'always'} label={this.props.loc.get(\"toggle_always\")} type='radio' id='show-tags-always' name='showTags'/>\n                            <Form.Check defaultChecked={this.props.config.resultsTags === 'search'} label={this.props.loc.get(\"toggle_search\")} type='radio' id='show-tags-search' name='showTags'/>\n                            <Form.Check defaultChecked={this.props.config.resultsTags === 'click'}  label={this.props.loc.get(\"toggle_click\")}  type='radio' id='show-tags-click'  name='showTags'/>                         \n                        </Fragment>\n                    </Form.Group>\n                    <Form.Group onChange={this.handleToggleChanged.bind(this)}>\n                    <Form.Label><b>{this.props.loc.get(\"result_class\")}</b></Form.Label>\n                        <div>                          \n                            <Form.Check inline defaultChecked={this.props.config.resultsTypes.includes('point')} label={this.props.loc.get(\"result_class_point\")} type={'checkbox'} id={'toggle-points'}/>\n                            <Form.Check inline defaultChecked={this.props.config.resultsTypes.includes('line')}  label={this.props.loc.get(\"result_class_line\")}  type={'checkbox'} id={'toggle-lines'} disabled/>\n                            <Form.Check inline defaultChecked={this.props.config.resultsTypes.includes('poly')}  label={this.props.loc.get(\"result_class_poly\")}  type={'checkbox'} id={'toggle-polygons'} disabled/>\n                        </div>\n                    </Form.Group>\n                    <Form.Group onChange={this.handleToggleChanged.bind(this)}>\n                        <Form.Label><b>{this.props.loc.get(\"settings_category_other\")}</b></Form.Label>\n                        <Form.Check defaultChecked={this.props.config.searchUseRegex}               type='switch' id='toggle-regex'       label={this.props.loc.get(\"toogle_search_regex\")}/>\n                        <Form.Check defaultChecked={this.props.config.searchAutocompleteUnderdoth}  type='switch' id='toggle-underdoth'   label={this.props.loc.get(\"toogle_detect_underdoth\")}/>\n                        <Form.Check defaultChecked={this.props.config.searchAutocompleteTags}       type='switch' id='toggle-tag-auto'    label={this.props.loc.get(\"toogle_search_tags_autocomplete\")} disabled/>\n                        <Form.Check defaultChecked={this.props.config.searchDisplayTagPalette}      type='switch' id='toggle-tag-palette' label={this.props.loc.get(\"toogle_search_tags_palette\")} disabled/>\n                    </Form.Group>\n                  </Form>\n                </Popover.Content>\n              </Popover>\n        )\n    }\n}\n","import {Tooltip} from 'react-leaflet'\nimport Badge from 'react-bootstrap/Badge'\n\nexport default function TagsContainer(props) {\n    return (\n        <Tooltip permanent={true} direction={'bottom'} offset={[-15, 20]} className={\"tagsContainer\"}>\n            {\n                Object.keys(props.tags).map(function(key) {\n                    return  <span key={key}><Badge variant={\"primary\"}>{props.loc.get(`tag_${props.tags[key]}`)}</Badge>{' '}</span>\n                })\n            }\n        </Tooltip>\n    );\n  }","import { Marker, Popup} from 'react-leaflet'\n\nimport { Link, generatePath } from \"react-router-dom\"\n\nimport { ROUTE_RESULT_PATTERN } from '../resources/routes'\n\nimport TagsContainer from './TagsContainer'\n\nexport default function MapMarker(props) {\n    return (\n        <Marker position={props.position}>\n            <Popup><Link to={generatePath(ROUTE_RESULT_PATTERN, {hash: props.hash})}>{props.title}</Link></Popup>\n            {props.displayTags?<TagsContainer tags={props.tags} loc={props.loc}/>:null}\n        </Marker>\n    );\n  }","export const CENTER_CANTABRIA = [43.19775063914452, -4.029390585676174]\n\nexport const CONFIG_LOCALSTORAGE_KEY = \"config\"\nexport const CONFIG_DEFAULT = {\n    locale: 'ast_pas',\n    results_title: 'never',\n    results_tags: 'search',\n    results_types: ['point'],\n    search_use_regex: true,\n    search_autocomplete_underdoth: true,\n    search_autocomplete_tags: false,\n    search_display_tag_palette: false\n  }","import { MapContainer, TileLayer, Polyline, Polygon} from 'react-leaflet'\n\nimport MapMarker from './MapMarker';\n\nimport {CENTER_CANTABRIA} from '../resources/constants'\n\nfunction getCentroid(arr) { \n    return arr.reduce(function (x,y) {\n        return [x[0] + y[0]/arr.length, x[1] + y[1]/arr.length] \n    }, [0,0]) \n}\n\nexport default function ResultsMap(props) {\n    const blackOptions = { color: 'black' }\n    return (\n        <MapContainer center={CENTER_CANTABRIA} zoom={10} scrollWheelZoom={true} zoomControl={false} dragging={true}>   \n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          {\n            Object.keys(props.points).map(function(key) {\n              return <MapMarker displayTags={props.displayTags} key={props.points[key].hash} position={props.points[key].coordinates[0]} {...props.points[key]} loc={props.loc}/>\n            })\n          }\n          {\n            Object.keys(props.polys).map(function(key) {\n              return <div key={key}>\n                      <Polygon pathOptions={blackOptions} positions={props.polys[key].coordinates} />\n                      <MapMarker displayTags={props.displayTags} key={props.polys[key].hash} position={getCentroid(props.polys[key].coordinates)} {...props.polys[key]} loc={props.loc}/>\n                    </div>\n            })\n          }\n          {\n            Object.keys(props.lines).map(function(key) {\n              return <div key={key}>\n                      <Polyline pathOptions={blackOptions} positions={props.lines[key].coordinates} />\n                      <MapMarker displayTags={props.displayTags} key={props.lines[key].hash} position={getCentroid(props.lines[key].coordinates)} {...props.lines[key]} loc={props.loc}/>\n                    </div>\n            })\n          }\n        </MapContainer>\n    );\n}","import { NavDropdown } from 'react-bootstrap';\n\nexport default function LanguageSelector(props) {\n    const availableLocales = props.loc.getBatch(props.loc.availableLocales)\n\n    return (\n        <NavDropdown title={props.title} onClick={props.onLanguageChanged} alignRight>\n        {\n          availableLocales.map(function(locale) {\n            return <NavDropdown.Item key={locale.key} id={locale.key}>{locale.value}</NavDropdown.Item>\n          })\n        }\n        </NavDropdown>\n    )\n}","import React, { Component} from 'react';\n\nimport {Container, Navbar, Nav, NavItem, OverlayTrigger} from 'react-bootstrap';\nimport {Toggles} from 'react-bootstrap-icons';\n\nimport SearchBar from './SearchBar'\nimport SettingsPopover from './SettingsPopover'\n\nimport ResultsMap from './ResultsMap';\nimport LanguageSelector from './LanguageSelector';\n\nfunction buildResults(props) {\n  if(!props.search) {\n    return {queryString:\"\",  queryResults: props.repository.getFromQueryString(\"\")}\n  }\n\n  if(props.wordId) {\n    const singleResult = props.repository.getFromId(props.wordId) ?? {queryString: \"\", queryResults: []}\n    return {queryString: singleResult.title, queryResults: [singleResult]}\n  }\n\n  return {queryString: props.queryString,  queryResults: props.repository.getFromQueryString(props.queryString)}\n}\n\nexport default class ResultsPage extends Component {\n  constructor(props) {\n    super(props);    \n    const {queryString, queryResults} = buildResults(props)\n    this.state = {\n      locale: this.props.loc.locale,\n      //Displayed content\n      queryString: queryString,\n      queryResults: queryResults,\n      //Results from settings\n      displayTags: (props.config.resultsTags === 'always') || (props.config.resultsTags === 'search' && props.search),\n      displayLines: (props.config.resultsTypes.includes('line')),\n      displayPolys: (props.config.resultsTypes.includes('poly')),\n      displayPoints: (props.config.resultsTypes.includes('point')),\n      useRegex: props.config.searchUseRegex\n    }\n  }\n\n  updateResults(newQueryString) {\n    this.setState( {\n      queryString: newQueryString,\n      queryResults: this.props.repository.getFromQueryString(newQueryString, this.props.config.searchUseRegex),\n      displayTags: (this.props.config.resultsTags === 'always') || (this.props.config.resultsTags === 'search' && newQueryString ? true : false)\n    })\n  }\n\n  handleSettingsUpdated() {\n    this.setState(\n      {\n        displayTags: (this.props.config.resultsTags === 'always') || (this.props.config.resultsTags === 'search' && this.state.search),\n        displayLines: (this.props.config.resultsTypes.includes('line')),\n        displayPolys: (this.props.config.resultsTypes.includes('poly')),\n        displayPoints: (this.props.config.resultsTypes.includes('point')),\n        useRegex: this.props.config.searchUseRegex\n      }\n    )\n  }\n\n  handleChangeLanguage(event) {\n    if(this.props.loc.availableLocales.includes(event.target.id)) {\n      this.props.loc.locale = event.target.id\n      this.setState( {locale: event.target.id})\n    }\n  }\n\n  render() {\n    const points = this.state.displayPoints ? this.state.queryResults.filter(point => point.type === 'point') : []\n    const polys = this.state.displayPolys ? this.state.queryResults.filter(point => point.type === 'poly') : []\n    const lines = this.state.displayLines ? this.state.queryResults.filter(point => point.type === 'line') : []\n\n    return (\n      <Container>\n        <Navbar fixed=\"top\"  bg=\"dark\" expand=\"lg\" variant=\"dark\">\n          <Navbar.Brand>\n            <img src=\"./unicorn.png\" alt={this.props.loc.get(\"brand_alt\")}/>\n          </Navbar.Brand> \n          <Navbar.Brand className={'main-brand'}>{this.props.loc.get(\"brand_name\")}</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />        \n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <SearchBar onSearch={this.updateResults.bind(this)} value={this.state.queryString} tags={this.props.repository.getAllTags()} regex={this.state.useRegex} {...this.props}/>\n\n            </Nav>\n            <LanguageSelector onLanguageChanged={this.handleChangeLanguage.bind(this)} title={this.props.loc.get(this.state.locale)} {...this.props} />\n            <NavItem id=\"settings\">\n              <OverlayTrigger trigger=\"click\" placement={'bottom'} overlay={<SettingsPopover  onSettingsUpdated={this.handleSettingsUpdated.bind(this)} {...this.props}/>} rootClose> \n                  <Toggles style={{'fontSize': 'xx-large'}}/>\n              </OverlayTrigger>\n              </NavItem>  \n          </Navbar.Collapse>\n        </Navbar>\n        <ResultsMap points={points} lines={lines} polys={polys} displayTags={this.state.displayTags} {...this.props}/>\n      </Container>\n    );\n  }\n}\n\n","import { Redirect, useLocation, useHistory } from \"react-router-dom\";\nimport { ROUTE_HOME } from \"../../resources/routes\";\n\nimport ResultsPage from '../ResultsPage'\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function ResultsRoute(props) {\n    let query = useQuery();\n    let search = { \"wordId\": query.get('h') ?? undefined, \"queryString\": query.get('q') ?? \"\" }\n    let history = useHistory()\n\n    if(!search.wordId && !search.queryString) return <Redirect to={ROUTE_HOME}/>\n    else return <ResultsPage repository={props.repository} search=\"true\" {...search} {...props} history={history}/>\n\n}\n","import React, { Component} from 'react';\n\nimport Container from 'react-bootstrap/Container'\n// import Navbar from 'react-bootstrap/Navbar'\n// import { MapContainer, TileLayer, Marker, useMapEvents, Polyline } from 'react-leaflet'\n\n// import {CENTER_CANTABRIA} from '../resources/constants'\n\n\n// function LocationMarker(props) {\n//   useMapEvents({\n//     click(event) {\n//       const { lat, lng } = event.latlng;\n//       props.onClick([lat, lng])\n//     }\n//   })\n// }\n\nexport default class CapturePage extends Component {\n  constructor(props) {\n    super(props);\n    this.searchBoxRef = React.createRef()\n\n    this.state = {\n      newPoints : []\n    }\n  }\n\n\n  registerLocation(position) {\n    this.setState({ newPoints: [...this.state.newPoints, position]})\n  }\n\n\n  render() {\n    // const blackOptions = { color: 'black' }\n    // const limeOptions = { color: 'black', dashArray: \"4\" }\n    // const newPointsLength = this.state.newPoints.length-1\n    return (\n      <Container>\n        {/* <MapContainer center={CENTER_CANTABRIA} zoom={10} scrollWheelZoom={true} zoomControl={false} dragging={true}>\n          <TileLayer\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n\n{\n            Object.keys(this.state.newPoints).map(function(key) {\n              return <Marker position={this.state.newPoints[key]} key={key}>\n              </Marker>\n            }.bind(this))\n           }\n\n        <Polyline pathOptions={blackOptions} positions={this.state.newPoints} />\n\n          {\n            this.state.newPoints.length > 2 \n            ? <Polyline pathOptions={limeOptions} positions={[this.state.newPoints[0], this.state.newPoints[newPointsLength]]} />\n            : null\n          }\n          <LocationMarker onClick={this.registerLocation.bind(this)}/>\n        </MapContainer>\n        <Navbar fixed=\"bottom\"  bg=\"dark\" expand=\"lg\" variant=\"dark\">\n          <Navbar.Brand>\n            <img src=\"./unicorn.png\" alt=\"Icunu di unicurniu encabritáu\"/>\n          </Navbar.Brand>          \n        </Navbar> */}\n      </Container>\n    );\n  }\n}","import { useHistory, useLocation } from \"react-router-dom\";\n\nimport CapturePage from '../CapturePage'\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function ResultsRoute(props) {\n    let query = useQuery();\n    let project = { \"project\": query.get('p') ?? undefined }\n\n    return  <CapturePage repository={props.repository} project={project} {...props} history={useHistory()}/>\n\n}\n","import { useHistory } from \"react-router-dom\";\n\nimport ResultsPage from '../ResultsPage'\n\nexport default function HomeRoute(props) {\n    const history = useHistory()\n    return <ResultsPage repository={props.repository} {...props} search=\"false\" history={history}/>\n}\n","import './App.css';\n\nimport React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport ResultsRoute from './components/routing/ResultsRoute'\nimport CaptureRoute from './components/routing/CaptureRoute'\nimport HomeRoute from './components/routing/HomeRoute'\n\nimport { ROUTE_HOME, ROUTE_CAPTURE, ROUTE_SEARCH, ROUTE_RESULT } from './resources/routes'\n\nexport default function App(props) {\n    return (\n        <Router basename={\"/toponimia-cantabria\"}>\n            <Switch>\n                <Route exact path={ROUTE_HOME} children={<HomeRoute {...props} />} />\n                <Route path={ROUTE_CAPTURE} children={<CaptureRoute {...props} />} />\n                <Route path={ROUTE_SEARCH} children={<ResultsRoute {...props} />} />\n                <Route path={ROUTE_RESULT} children={<ResultsRoute {...props} />} />\n            </Switch>\n        </Router>\n    )\n}\n\n\n\n\n","import {CONFIG_LOCALSTORAGE_KEY, CONFIG_DEFAULT} from '../resources/constants'\n\nexport default class ConfigService {\n    constructor(config) {\n        Object.entries(CONFIG_DEFAULT).forEach(([key, defaultValue]) => (config[key] = config[key]??defaultValue))\n\n        this.config = config\n    }\n\n    static readFromLocalStorage() {\n        return new ConfigService(JSON.parse(localStorage.getItem(CONFIG_LOCALSTORAGE_KEY) ?? \"{}\"))\n    }\n\n    writeToLocalStorage() {\n        localStorage.setItem(CONFIG_LOCALSTORAGE_KEY, JSON.stringify(this._config))\n    }\n\n    set config(newConfig) {\n        this._config = newConfig\n        this.writeToLocalStorage()\n    }\n\n    get locale() {\n        return this._config.locale\n    }\n\n    set locale(newLocale) {\n        this._config.locale = newLocale;\n        this.writeToLocalStorage()\n    }\n\n    get resultsTitle() {\n        return this._config.results_title\n    }\n\n    set resultsTitle(newResultsTitle) {\n        this._config.results_title = newResultsTitle;\n        this.writeToLocalStorage()\n    }\n\n    get resultsTags() {\n        return this._config.results_tags\n    }\n\n    set resultsTags(newResultsTags) {\n        this._config.results_tags = newResultsTags;\n        this.writeToLocalStorage()\n    }\n\n    get resultsTypes() {\n        return this._config.results_types\n    }\n\n    set resultsTypes(newResultsTypes) {\n        this._config.results_types = newResultsTypes;\n        this.writeToLocalStorage()\n    }\n\n    get searchAutocompleteUnderdoth() {\n        return this._config.search_autocomplete_underdoth\n    }\n\n    set searchAutocompleteUnderdoth(newSearchAutocompleteUnderdoth) {\n        this._config.search_autocomplete_underdoth = newSearchAutocompleteUnderdoth;\n        this.writeToLocalStorage()\n    }\n\n    get searchAutocompleteTags() {\n        return this._config.search_autocomplete_tags\n    }\n\n    set searchAutocompleteTags(newSearchAutocompleteTags) {\n        this._config.search_autocomplete_tags = newSearchAutocompleteTags;\n        this.writeToLocalStorage()\n    }\n\n    get searchDisplayTagPalette() {\n        return this._config.search_display_tag_palette\n    }\n\n    set searchDisplayTagPalette(newSearchDisplayTagPalette) {\n        this._config.search_display_tag_palette = newSearchDisplayTagPalette;\n        this.writeToLocalStorage()\n    }\n\n    get searchUseRegex() {\n        return this._config.search_use_regex\n    }\n\n    set searchUseRegex(newSearchUseRegex) {\n        this._config.search_use_regex = newSearchUseRegex;\n        this.writeToLocalStorage()\n    }\n}","export const GOOGLE_SHEETS_API_KEY = 'AIzaSyBl_GJjcKmg4Lk0dWPLzGX6bXpT0vXW5R0'\n\nexport const GOOGLE_DOC_ID = '1Rd8TQOp2hSBOxhSeAaLeb_faICF2_oAv2-jtn2vgXrY'\nexport const GOOGLE_DB_SHEET_TITLE = 'DB'\nexport const GOOGLE_INFO_SHEET_TITLE = 'INFO'\nexport const GOOGLE_INFO_SHEET_CELL = 'A1'\n\n","import { GoogleSpreadsheet } from 'google-spreadsheet';\nimport { GOOGLE_DOC_ID, GOOGLE_DB_SHEET_TITLE, GOOGLE_INFO_SHEET_TITLE, GOOGLE_INFO_SHEET_CELL, GOOGLE_SHEETS_API_KEY } from '../resources/googleCredentials'\n\nexport default class GSpreadsheet {\n  static async load() {\n    const doc = this.connect()\n    await doc.loadInfo(); \n    console.log(`Spreadsheets: loaded document ${doc.title}`);\n\n    const info_sheet = await doc.sheetsByTitle[GOOGLE_INFO_SHEET_TITLE]\n    await info_sheet.loadCells(`${GOOGLE_INFO_SHEET_CELL}:${GOOGLE_INFO_SHEET_CELL}`)\n    \n    return  {\n              hash: info_sheet.getCellByA1(GOOGLE_INFO_SHEET_CELL).value,\n              sheet: await doc.sheetsByTitle[GOOGLE_DB_SHEET_TITLE]\n            }\n  }\n\n  static connect() {\n    const doc = new GoogleSpreadsheet(GOOGLE_DOC_ID);\n    doc.useApiKey(GOOGLE_SHEETS_API_KEY)\n    return doc\n  }\n}","export const ast_pas = \n{\n    \"brand_alt\": \"Imagin de cabeza di unicurniu\",\n\n    \"search_placeholder\": \"Iscribi la tu búsqueda…\",\n    \"search_regex_placeholder\": \"Búsqueda con regexp…\",\n\n    \"show_tags\": \"Mostrar etiquetas\",\n    \"show_title\": \"Mostrar topónimus\",\n\n    \"toggle_never\": \"Nunca\", \n    \"toggle_always\": \"Siempri\", \n    \"toggle_search\": \"In búsquedas\",\n    \"toggle_click\": \"In cliquiandu\",\n\n    \"result_class\": \"Clas de resultáus\",\n    \"result_class_point\": \"Puntualis\",\n    \"result_class_line\": \"Linialis\",\n    \"result_class_poly\": \"Zonalis\",\n\n    \"toogle_detect_underdoth\": \"Detectar hachi supuntiá (h.→ḥ)\", \n\n    \"settings_category_other\": \"Otrus\",\n    \"toogle_search_regex\": \"Búsqueda con regex\", \n    \"toogle_search_tags_autocomplete\": \"Autucompletar etiquetas\", \n    \"toogle_search_tags_palette\": \"Mostrar paleta etiquetas\",\n\n    \"tag_etymology:romance\": \"Romanci\",\n    \"tag_etymology:celtic\": \"Celta\",\n    \"tag_etymology:celtoroman\": \"Celtulatina\",\n    \"tag_etymology:ie\": \"Indu-Europeya\",\n    \"tag_etymology:unknown\": \"Incierta\",\n\n    \"tag_feature:metaphony_u\": \"Metafunía U\",\n    \"tag_feature:metaphony_i\": \"Metafunía I\",\n    \"tag_feature:aspirate_f\": \"F aspiráu\",\n    \"tag_feature:b_g\": \"B > G\",\n    \"tag_feature:lost_f\": \"F mudu\",\n    \"tag_feature:antihiatic_yod\": \"Yod antihiáticu\"\n}","export const esp = \n{\n    \"brand_alt\": \"Imagen de cabeza de unicornio\",\n\n    \"search_placeholder\": \"Escribe tu búsqueda…\",\n    \"search_regex_placeholder\": \"Búsqueda con regexp…\",\n\n    \"show_tags\": \"Mostrar etiquetas\",\n    \"show_title\": \"Mostrar topónimos\",\n\n    \"toggle_never\": \"Nunca\", \n    \"toggle_always\": \"Siempre\", \n    \"toggle_search\": \"En búsquedas\",\n    \"toggle_click\": \"Al clicar\",\n\n    \"result_class\": \"Clase de resultados\",\n    \"result_class_point\": \"Puntuales\",\n    \"result_class_line\": \"Lineales\",\n    \"result_class_poly\": \"Zonales\",\n\n    \"settings_category_other\": \"Otros\",\n    \"toogle_search_regex\": \"Búsqueda con regex\", \n    \"toogle_detect_underdoth\": \"Detectar hache sopunteada (h.→ḥ)\", \n    \"toogle_search_tags_autocomplete\": \"Autocompletar etiquetas\", \n    \"toogle_search_tags_palette\": \"Mostrar paleta etiquetas\",\n\n\n    \"tag_etymology:romance\": \"Romance\",\n    \"tag_etymology:celtic\": \"Celta\",\n    \"tag_etymology:celtoroman\": \"Celtolatina\",\n    \"tag_etymology:ie\": \"Indoeuropea\",\n    \"tag_etymology:unknown\": \"Incierta\",\n\n    \"tag_feature:metaphony_u\": \"Metafonía U\",\n    \"tag_feature:metaphony_i\": \"Metafonía I\",\n    \"tag_feature:aspirate_f\": \"F aspirada\",\n    \"tag_feature:b_g\": \"B > G\",\n    \"tag_feature:lost_f\": \"F muda\",\n    \"tag_feature:antihiatic_yod\": \"Yod antihiática\"\n}","export const unlocalizable = \n{\n    \"brand_name\": \"L'Unicurniu\",\n    \"esp\": \"Castellano\", \n    \"ast_pas\": \"Pasiigu\",\n}\n","import * as Locales from '../resources/localization/all'\n\nexport default class Localization {\n    constructor(locale) {\n        this.locale = locale\n    }\n\n    get locale() {\n        return this._locale\n    }\n\n    get availableLocales() {\n        return Object.keys(Locales).filter(l => l !== 'unlocalizable')\n    }\n\n    set locale(newLocale) {\n        if(!Object.keys(Locales).includes(newLocale)) throw new Error(\"Unknown Locale\")\n        \n        this._locale = newLocale\n        this.repository = {...Locales.unlocalizable, ...Locales[newLocale]}\n    }\n\n    get(code) {\n        return this.repository[code] ?? code\n    }\n\n    getBatch(codes) {\n        \n        return codes.map(code => \n                            ({\n                                key: code, \n                                value: this.get(code)\n                            }))\n    }\n\n    static createFromConfig(config) {\n        return new Localization(config.locale)\n    }\n}","import _ from 'lodash'\n\nexport async function buildRepositoryFromSheet(spreadsheet) {\n    if (shouldReload(spreadsheet.hash)) \n        await reloadLocalDatabase(spreadsheet.hash, spreadsheet.sheet)\n\n    return buildRepositoryFromLocalStorage()\n}\n\nexport function buildRepositoryFromLocalStorage () {\n    return new TopoRepository(JSON.parse(localStorage.getItem(\"localIndex\")))\n}\n\nasync function reloadLocalDatabase(newHash, googleSheet) {\n    return googleSheet.getRows().then(rows => {\n        const remotedb = rows.map(row => ({ hash: row.hash, title: row.name, type: row.type, coordinates: row.coordinates.trim().split(';').map(pair => pair.trim().split(',').map(parseFloat)), tags: row.tags.split(',')}))\n        localStorage.setItem(\"localIndex\", JSON.stringify(remotedb))\n        localStorage.setItem(\"localIndexHash\", newHash)\n\n        console.log(`Database: updated to ${newHash}`)\n    })\n}\n\nfunction shouldReload(newHash) {\n    const currentHash = localStorage.getItem(\"localIndexHash\")\n\n    const reload = newHash !== currentHash\n\n    console.log(`Database: current is ${currentHash}, reload=${reload}`)\n    return reload\n}\n\nclass TopoRepository {\n\n    constructor(database) {\n        this.database = _(database).orderBy(['title'])\n    }\n\n    getFromQueryString(queryString, regex = true) {\n        if(regex) {\n            let queryRegex = RegExp(queryString, 'i')\n\n            return this.database.filter(entry => queryRegex.test(entry.title)).value()\n        } else {\n            return this.database.filter(entry => entry.title.toLowerCase().includes(queryString.toLowerCase()))\n        }\n    }\n\n    getFromId(wordId) {\n        const result = this.database.filter(entry => entry.hash === wordId).value()\n        return result?.[0] ?? undefined\n    }\n    \n    getAllTags() {\n        let tags = new Set()\n        this.database.map(entry => entry.tags).forEach(tag => tags.add(tag))\n        return Array.from(tags)\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport Configuration from './model/configuration'\nimport GSpreadsheet from './model/gSpreadsheet'\nimport Localization from './model/localization'\nimport { buildRepositoryFromSheet, buildRepositoryFromLocalStorage } from './model/topoRepository'\n\nfunction startApp(repository) {\n  var config = Configuration.readFromLocalStorage()\n  var localization = Localization.createFromConfig(config)\n  ReactDOM.render(\n    // <React.StrictMode>\n      <App config={config} repository={repository} loc={localization}/>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nGSpreadsheet.load().then(buildRepositoryFromSheet, buildRepositoryFromLocalStorage).then(startApp)\n\n"],"sourceRoot":""}